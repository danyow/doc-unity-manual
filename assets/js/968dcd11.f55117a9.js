"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[38613],{3905:function(e,n,t){t.d(n,{Zo:function(){return m},kt:function(){return h}});var i=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function a(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);n&&(i=i.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,i)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?a(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):a(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function c(e,n){if(null==e)return{};var t,i,r=function(e,n){if(null==e)return{};var t,i,r={},a=Object.keys(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(i=0;i<a.length;i++)t=a[i],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var s=i.createContext({}),l=function(e){var n=i.useContext(s),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},m=function(e){var n=l(e.components);return i.createElement(s.Provider,{value:n},e.children)},u={inlineCode:"code",wrapper:function(e){var n=e.children;return i.createElement(i.Fragment,{},n)}},p=i.forwardRef((function(e,n){var t=e.components,r=e.mdxType,a=e.originalType,s=e.parentName,m=c(e,["components","mdxType","originalType","parentName"]),p=l(t),h=r,d=p["".concat(s,".").concat(h)]||p[h]||u[h]||a;return t?i.createElement(d,o(o({ref:n},m),{},{components:t})):i.createElement(d,o({ref:n},m))}));function h(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var a=t.length,o=new Array(a);o[0]=p;var c={};for(var s in n)hasOwnProperty.call(n,s)&&(c[s]=n[s]);c.originalType=e,c.mdxType="string"==typeof e?e:r,o[1]=c;for(var l=2;l<a;l++)o[l]=t[l];return i.createElement.apply(null,o)}return i.createElement.apply(null,t)}p.displayName="MDXCreateElement"},5841:function(e,n,t){t.r(n),t.d(n,{assets:function(){return m},contentTitle:function(){return s},default:function(){return h},frontMatter:function(){return c},metadata:function(){return l},toc:function(){return u}});var i=t(87462),r=t(63366),a=(t(67294),t(3905)),o=["components"],c={id:"combining-meshes",title:"Manually combining meshes",slug:"/optimizing-draw-calls/combining-meshes"},s="Manually combining meshes",l={unversionedId:"graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes",id:"graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes",title:"Manually combining meshes",description:"You can manually combine multiple meshes into a single mesh as a draw call optimization technique. Unity renders the combined mesh in a single draw call instead of one draw call per mesh. This technique can be a good alternative to draw call batching in cases where the meshes are close together and don\u2019t move relative to one another. For example, for a static cupboard with lots of drawers, it makes sense to combine everything into a single mesh.",source:"@site/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes.md",sourceDirName:"graphics/graphics-performance-profiling/optimizing-draw-calls",slug:"/optimizing-draw-calls/combining-meshes",permalink:"/doc-unity-manual/docs/optimizing-draw-calls/combining-meshes",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/graphics/graphics-performance-profiling/optimizing-draw-calls/combining-meshes.md",tags:[],version:"current",frontMatter:{id:"combining-meshes",title:"Manually combining meshes",slug:"/optimizing-draw-calls/combining-meshes"},sidebar:"tutorialSidebar",previous:{title:"Optimizing draw calls",permalink:"/doc-unity-manual/docs/optimizing-draw-calls"},next:{title:"Draw call batching",permalink:"/doc-unity-manual/docs/draw-call-batching"}},m={},u=[],p={toc:u};function h(e){var n=e.components,t=(0,r.Z)(e,o);return(0,a.kt)("wrapper",(0,i.Z)({},p,t,{components:n,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"manually-combining-meshes"},"Manually combining meshes"),(0,a.kt)("p",null,"You can manually combine multiple meshes into a single mesh as a ",(0,a.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/optimizing-draw-calls"},"draw call optimization")," technique. Unity renders the combined mesh in a single draw call instead of one draw call per mesh. This technique can be a good alternative to ",(0,a.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/draw-call-batching"},"draw call batching")," in cases where the meshes are close together and don\u2019t move relative to one another. For example, for a static cupboard with lots of drawers, it makes sense to combine everything into a single mesh."),(0,a.kt)("p",null," ",(0,a.kt)("strong",{parentName:"p"},"Warning")," : Unity can\u2019t individually cull meshes you combine. This means that if one part of a combined mesh is onscreen, Unity draws the entire combined mesh. If the meshes are static and you want Unity to individually cull them, use ",(0,a.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/draw-call-batching/static-batching"},"static batching")," instead."),(0,a.kt)("p",null,"There are two main ways to combine meshes:"),(0,a.kt)("ul",null,(0,a.kt)("li",{parentName:"ul"},"In your asset generation tool while authoring the mesh."),(0,a.kt)("li",{parentName:"ul"},"In Unity using ",(0,a.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Mesh.CombineMeshes.html"},"Mesh.CombineMeshes"),".")))}h.isMDXComponent=!0}}]);