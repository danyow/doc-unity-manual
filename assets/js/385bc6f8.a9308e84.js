"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[91852],{3905:function(e,t,r){r.d(t,{Zo:function(){return u},kt:function(){return m}});var a=r(67294);function n(e,t,r){return t in e?Object.defineProperty(e,t,{value:r,enumerable:!0,configurable:!0,writable:!0}):e[t]=r,e}function i(e,t){var r=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),r.push.apply(r,a)}return r}function o(e){for(var t=1;t<arguments.length;t++){var r=null!=arguments[t]?arguments[t]:{};t%2?i(Object(r),!0).forEach((function(t){n(e,t,r[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(r,t))}))}return e}function s(e,t){if(null==e)return{};var r,a,n=function(e,t){if(null==e)return{};var r,a,n={},i=Object.keys(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||(n[r]=e[r]);return n}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)r=i[a],t.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(e,r)&&(n[r]=e[r])}return n}var c=a.createContext({}),p=function(e){var t=a.useContext(c),r=t;return e&&(r="function"==typeof e?e(t):o(o({},t),e)),r},u=function(e){var t=p(e.components);return a.createElement(c.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var r=e.components,n=e.mdxType,i=e.originalType,c=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),d=p(r),m=n,f=d["".concat(c,".").concat(m)]||d[m]||l[m]||i;return r?a.createElement(f,o(o({ref:t},u),{},{components:r})):a.createElement(f,o({ref:t},u))}));function m(e,t){var r=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var i=r.length,o=new Array(i);o[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:n,o[1]=s;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},86724:function(e,t,r){r.r(t),r.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return m},frontMatter:function(){return s},metadata:function(){return p},toc:function(){return l}});var a=r(87462),n=r(63366),i=(r(67294),r(3905)),o=["components"],s={id:"Quickstart2DPerspective",title:"Game perspectives for 2D games",slug:"/quickstart2d/quickstart2dperspective"},c="Game perspectives for 2D games",p={unversionedId:"unity2d/quickstart2d/Quickstart2DPerspective",id:"unity2d/quickstart2d/Quickstart2DPerspective",title:"Game perspectives for 2D games",description:"Decide what game perspective or viewpoint you want your game to have. The following table describes the main types of 2D game perspective:",source:"@site/docs/unity2d/quickstart2d/quickstart2dperspective.md",sourceDirName:"unity2d/quickstart2d",slug:"/quickstart2d/quickstart2dperspective",permalink:"/doc-unity-manual/docs/quickstart2d/quickstart2dperspective",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/unity2d/quickstart2d/quickstart2dperspective.md",tags:[],version:"current",frontMatter:{id:"Quickstart2DPerspective",title:"Game perspectives for 2D games",slug:"/quickstart2d/quickstart2dperspective"},sidebar:"tutorialSidebar",previous:{title:"Creating a 2D game",permalink:"/doc-unity-manual/docs/quickstart2d/quickstart2dcreate"},next:{title:"Initial setup for 2D games",permalink:"/doc-unity-manual/docs/quickstart2d/quickstart2dsetup"}},u={},l=[{value:"\u793a\u4f8b",id:"\u793a\u4f8b",level:2}],d={toc:l};function m(e){var t=e.components,r=(0,n.Z)(e,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"game-perspectives-for-2d-games"},"Game perspectives for 2D games"),(0,i.kt)("p",null,"Decide what game perspective or viewpoint you want your game to have. The following table describes the main types of 2D game perspective:"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"Game perspective")),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"\u63cf\u8ff0")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Top-down"),(0,i.kt)("td",{parentName:"tr",align:null},"A 2D game that provides an overhead or bird\u2019s-eye view of the action.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Side-on"),(0,i.kt)("td",{parentName:"tr",align:null},"A 2D game where the character moves left or right (or up and down) and the screen scrolls with them. The perspective is from the side.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"Isometric and 2.5D (three-quarter view)"),(0,i.kt)("td",{parentName:"tr",align:null},"2D games with isometric view simulate 3D geometry and a depth axis, but use an orthographic Camera instead of a perspective Camera. This gives the player a bird\u2019s-eye view of the action. For information on orthographic and perspective Cameras, see ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/cameras-overview"},"Cameras"),".",(0,i.kt)("br",null),"2.5D (also known as three-quarter view) games are 2D games that use 3D geometry for the environment and characters, but restrict the gameplay to two dimensions. The 3D effect has a visual rather than functional purpose.")))),(0,i.kt)("p",null,"Many sections of this guide are relevant for all game perspectives. For top-down and side-on perspectives, the ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/quickstart2d/quickstart2dcreate#tilemap"},"Tilemap")," and ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/quickstart2d/quickstart2dcreate#9-slicing"},"9-slicing")," tools are especially useful for designing your levels. For isometric, three-quarter view or 2.5D perspectives, the ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/quickstart2d/quickstart2dcreate#isometric-tilemaps"},"Isometric Tilemaps")," tool is especially useful."),(0,i.kt)("h2",{id:"\u793a\u4f8b"},"\u793a\u4f8b"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-top-down-2d.png",alt:"A top-down 2D game demo made with Unity"})),(0,i.kt)("p",null,"A top-down 2D game demo made with Unity"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-side-scroller-2d.png",alt:"A 2D side-on game demo made with Unity"})),(0,i.kt)("p",null,"A 2D side-on game demo made with Unity"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/quickstart-isometric-2d.png",alt:"An isometric 2D game demo made with Unity"})),(0,i.kt)("p",null,"An isometric 2D game demo made with Unity"))}m.isMDXComponent=!0}}]);