"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[12914],{3905:function(e,t,i){i.d(t,{Zo:function(){return c},kt:function(){return m}});var a=i(67294);function n(e,t,i){return t in e?Object.defineProperty(e,t,{value:i,enumerable:!0,configurable:!0,writable:!0}):e[t]=i,e}function o(e,t){var i=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),i.push.apply(i,a)}return i}function r(e){for(var t=1;t<arguments.length;t++){var i=null!=arguments[t]?arguments[t]:{};t%2?o(Object(i),!0).forEach((function(t){n(e,t,i[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(i)):o(Object(i)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(i,t))}))}return e}function l(e,t){if(null==e)return{};var i,a,n=function(e,t){if(null==e)return{};var i,a,n={},o=Object.keys(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||(n[i]=e[i]);return n}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)i=o[a],t.indexOf(i)>=0||Object.prototype.propertyIsEnumerable.call(e,i)&&(n[i]=e[i])}return n}var s=a.createContext({}),p=function(e){var t=a.useContext(s),i=t;return e&&(i="function"==typeof e?e(t):r(r({},t),e)),i},c=function(e){var t=p(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},d=a.forwardRef((function(e,t){var i=e.components,n=e.mdxType,o=e.originalType,s=e.parentName,c=l(e,["components","mdxType","originalType","parentName"]),d=p(i),m=n,h=d["".concat(s,".").concat(m)]||d[m]||u[m]||o;return i?a.createElement(h,r(r({ref:t},c),{},{components:i})):a.createElement(h,r({ref:t},c))}));function m(e,t){var i=arguments,n=t&&t.mdxType;if("string"==typeof e||n){var o=i.length,r=new Array(o);r[0]=d;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:n,r[1]=l;for(var p=2;p<o;p++)r[p]=i[p];return a.createElement.apply(null,r)}return a.createElement.apply(null,i)}d.displayName="MDXCreateElement"},31243:function(e,t,i){i.r(t),i.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=i(87462),n=i(63366),o=(i(67294),i(3905)),r=["components"],l={id:"macos-building",title:"Building your macOS application",slug:"/macos-building"},s="Building your macOS application",p={unversionedId:"platform-specific/apple-mac/macos-delivery/macos-building/macos-building",id:"platform-specific/apple-mac/macos-delivery/macos-building/macos-building",title:"Building your macOS application",description:"For macOS applications, there are platform-specific requirements that change the build process. Also, some digital distribution services that can host macOS applications have different requirements. For example, the Mac App Store doesn\u2019t require you to notarize your application because the upload process includes similar content validation to notarization. If you are targeting a specific digital distribution service with your build, check the documentation for that Digital distribution service first to check if the requirements differ.",source:"@site/docs/platform-specific/apple-mac/macos-delivery/macos-building/macos-building.md",sourceDirName:"platform-specific/apple-mac/macos-delivery/macos-building",slug:"/macos-building",permalink:"/doc-unity-manual/docs/macos-building",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/platform-specific/apple-mac/macos-delivery/macos-building/macos-building.md",tags:[],version:"current",frontMatter:{id:"macos-building",title:"Building your macOS application",slug:"/macos-building"},sidebar:"tutorialSidebar",previous:{title:"Delivering your macOS application",permalink:"/doc-unity-manual/docs/macos-delivery"},next:{title:"Notarizing your macOS application",permalink:"/doc-unity-manual/docs/macos-building/macos-building-notarization"}},c={},u=[{value:"Target architecture",id:"target-architecture",level:2},{value:"Building",id:"building",level:2},{value:"Information property list file",id:"information-property-list-file",level:2},{value:"Entitlements",id:"entitlements",level:2},{value:"Code signing",id:"code-signing",level:2},{value:"\u516c\u8bc1",id:"\u516c\u8bc1",level:2}],d={toc:u};function m(e){var t=e.components,i=(0,n.Z)(e,r);return(0,o.kt)("wrapper",(0,a.Z)({},d,i,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"building-your-macos-application"},"Building your macOS application"),(0,o.kt)("p",null,"For macOS applications, there are platform-specific requirements that change the build process. Also, some digital distribution services that can host macOS applications have different requirements. For example, the Mac App Store doesn\u2019t require you to ",(0,o.kt)("a",{parentName:"p",href:"#%E5%85%AC%E8%AF%81"},"notarize")," your application because the upload process includes similar content validation to notarization. If you are targeting a specific digital distribution service with your build, check the documentation for that ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-distribution"},"Digital distribution service")," first to check if the requirements differ."),(0,o.kt)("h2",{id:"target-architecture"},"Target architecture"),(0,o.kt)("p",null,"Before you build an application for macOS, be aware of the chipset differences between Apple devices. Some Apple devices use Intel chipsets and others use Apple silicon. You can use Unity to create both architecture-specific builds and builds that target both Intel and Apple silicon. The available target architectures are:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intel 64-bit")," : Creates a macOS build for Apple devices that use Intel chipsets."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Apple silicon")," : Creates a macOS build for Apple devices that use Apple silicon architecture."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("strong",{parentName:"li"},"Intel 64-bit + Apple silicon")," : Creates a macOS build that works on both Intel chipsets and Apple silicon. Note: This results in a build that is larger than the individual architecture-specific builds. This impacts overall application size.")),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/macos-target-architecture.png",alt:"The Build Settings window showing the options in the Architecture drop-down."})),(0,o.kt)("p",null,"The Build Settings window showing the options in the Architecture drop-down."),(0,o.kt)("h2",{id:"building"},"Building"),(0,o.kt)("p",null,"To build your Unity application:"),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Open the ",(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/editor-features/build-settings"},"Build Settings window")," (menu:  ",(0,o.kt)("strong",{parentName:"li"},"File"),"  ",">","  ",(0,o.kt)("strong",{parentName:"li"},"Build Settings")," )."),(0,o.kt)("li",{parentName:"ol"},"In the  ",(0,o.kt)("strong",{parentName:"li"},"Platforms"),"  list, select  ",(0,o.kt)("strong",{parentName:"li"},"PC, Mac & Linux Standalone")," ."),(0,o.kt)("li",{parentName:"ol"},"Set  ",(0,o.kt)("strong",{parentName:"li"},"Target Platform"),"  to  ",(0,o.kt)("strong",{parentName:"li"},"macOS")," . If  ",(0,o.kt)("strong",{parentName:"li"},"macOS"),"  isn\u2019t an option, add the  ",(0,o.kt)("strong",{parentName:"li"},"Mac Build Support"),"  module to your Unity Editor install. For information on how to install modules, see ",(0,o.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/hub/manual/AddModules.html"},"Add modules"),"."),(0,o.kt)("li",{parentName:"ol"},"Set  ",(0,o.kt)("strong",{parentName:"li"},"Architecture"),"  to the architecture type you want Unity to build your application for. For more information about target architecture for macOS, see ",(0,o.kt)("a",{parentName:"li",href:"#target-architecture"},"Target architecture"),"."),(0,o.kt)("li",{parentName:"ol"},"If you want to create an ",(0,o.kt)("a",{parentName:"li",href:"https://developer.apple.com/library/archive/featuredarticles/XcodeConcepts/Concept-Projects.html"},"Xcode project")," for your application, enable  ",(0,o.kt)("strong",{parentName:"li"},"Create Xcode Project")," ."),(0,o.kt)("li",{parentName:"ol"},"Click  ",(0,o.kt)("strong",{parentName:"li"},"Build")," .")),(0,o.kt)("h2",{id:"information-property-list-file"},"Information property list file"),(0,o.kt)("p",null,"macOS applications require an information property list file called ",(0,o.kt)("inlineCode",{parentName:"p"},"Info.plist")," that contains metadata and configuration information for the application. The file is organized as a list of key-value pairs. For more information about information property list files, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Articles/AboutInformationPropertyListFiles.html"},"About Information Property List Files"),". For more information about the ",(0,o.kt)("inlineCode",{parentName:"p"},"Info.plist")," in particular, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html"},"About Info.plist Keys and Values"),"."),(0,o.kt)("p",null,"When Unity builds your application, it creates the ",(0,o.kt)("inlineCode",{parentName:"p"},"Info.plist")," file. Unity stores this file at  ",(0,o.kt)("strong",{parentName:"p"},"ApplicationName.app"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Contents"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Info.plist")," . Unity displays required ",(0,o.kt)("inlineCode",{parentName:"p"},"Info.plist")," configuration properties in the ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/class-player-settings"},"Player Settings")," window that you can set before building the application. These properties are in the  ",(0,o.kt)("strong",{parentName:"p"},"Other Settings"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Mac App Store Options"),"  section."),(0,o.kt)("p",null,"There are additional keys that you can add to your ",(0,o.kt)("inlineCode",{parentName:"p"},"Info.plist")," file. To add them, build the application and use a text editor to edit the file. For information about the available keys, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/documentation/General/Reference/InfoPlistKeyReference/Introduction/Introduction.html"},"About Info.plist Keys and Values"),"."),(0,o.kt)("h2",{id:"entitlements"},"Entitlements"),(0,o.kt)("p",null,"macOS applications require ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/bundleresources/entitlements"},"entitlements")," to specify permissions and restrictions that allow or prevent your application from taking specific actions. At a minimum, your application must include entitlements that result in a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/security/hardened_runtime"},"Hardened Runtime"),". These entitlements protect your application from code injection, hijacking of dynamically linked libraries, and memory tampering."),(0,o.kt)("p",null,"To define entitlements, macOS applications use an xml file with the ",(0,o.kt)("inlineCode",{parentName:"p"},".entitlements")," file extension. macOS applications then use the ",(0,o.kt)("a",{parentName:"p",href:"#code-signing"},"code signing")," process to bind the entitlements to an application."),(0,o.kt)("p",null,"If your application uses plug-ins that perform macOS platform-specific actions, you might need to add entitlements to allow those actions. For more information on what actions require entitlements, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/bundleresources/entitlements"},"Apple Developer Entitlements"),"."),(0,o.kt)("h2",{id:"code-signing"},"Code signing"),(0,o.kt)("p",null,"A code signature summarizes the content of an application at the time when the developer creates the code signature. Apple devices use an application\u2019s code signature to detect changes made since the developer created the code signature. This guarantees the integrity of applications and safeguards against tampering. If an application doesn\u2019t have a code signature, the device warns the end user before they open the application. The process of creating a code signature for an application is called code signing. For more information about the technical details of code signing, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/library/archive/technotes/tn2206/_index.html"},"macOS Code Signing in Depth"),"."),(0,o.kt)("p",null,"Unity automatically code signs any application it builds for macOS, regardless of the platform you develop on. This guards against tampering and allows your application to run without warnings, but doesn\u2019t identify you as the developer. This is sufficient to run the application, but to not to ",(0,o.kt)("a",{parentName:"p",href:"#%E5%85%AC%E8%AF%81"},"notarize")," it. Norarization requires you to sign the application with a developer or organization ID. When you sign an application with an ID, the digital signature includes a fingerprint of your application as well as a cryptographic signature that identifies you as the developer. Unity doesn\u2019t sign the code it builds with cryptographic information. To do this, you need to sign the code either manually or using Xcode."),(0,o.kt)("p",null,"Depending on which method of ",(0,o.kt)("a",{parentName:"p",href:"#%E5%85%AC%E8%AF%81"},"notarization")," you use, the steps you perform to code sign an application changes. So, for information about how to code sign your application, see ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-building/macos-building-notarization"},"Notarizing your macOS application"),"."),(0,o.kt)("h2",{id:"\u516c\u8bc1"},"\u516c\u8bc1"),(0,o.kt)("p",null,"A valid code signature guarantees the integrity of an application, but it doesn\u2019t guarantee that the application itself isn\u2019t malicious. Notarization is the process Apple uses to validate that Developer ID-signed applications don\u2019t contain malicious content. If Apple doesn\u2019t detect malicious content, it adds a digital tag to the application which indicates that the application is fit for distribution on Apple devices. The results of notarization are also available online for gatekeeping processes to access. Apple keeps an audit trail of applications distributed using your Developer ID. If your ID is exposed, you can use this trail to revoke the execution rights of unauthorized versions of your application. For more information about noratization, see ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/documentation/security/notarizing_macos_software_before_distribution"},"Notarizing macOS Software Before Distribution"),"."),(0,o.kt)("p",null,"Digital distribution services often require you to notarize your application before you can distribute the application on their platform. However, some digital distribution services, such as the ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-distribution/macos-distribution-mac-app-store"},"Mac App Store")," include similar content validation to notarization. This means that you don\u2019t need to notarize your application to distribute it on certain platforms. For more information about digital distribution-specific information, see ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-distribution"},"Digital distribution services for macOS applications"),"."),(0,o.kt)("p",null,"To notarize your application to run on macOS 10.15 or later, you must first code sign your application with a ",(0,o.kt)("a",{parentName:"p",href:"https://developer.apple.com/developer-id/"},"Developer ID"),". If you don\u2019t notarize your application, the device warns the end user before they open the application. You don\u2019t need to notarize an application for distribution through the ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-distribution/macos-distribution-mac-app-store"},"Mac App Store")," because the submission process includes similar content validation."),(0,o.kt)("p",null,"Depending on which platform you develop on, the available notarization methods differ. For information about how to notarize your application, see ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/macos-building/macos-building-notarization"},"Notarizing your macOS application"),"."))}m.isMDXComponent=!0}}]);