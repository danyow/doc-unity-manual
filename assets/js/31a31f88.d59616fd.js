"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[68837],{3905:function(e,n,t){t.d(n,{Zo:function(){return u},kt:function(){return m}});var a=t(67294);function r(e,n,t){return n in e?Object.defineProperty(e,n,{value:t,enumerable:!0,configurable:!0,writable:!0}):e[n]=t,e}function l(e,n){var t=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);n&&(a=a.filter((function(n){return Object.getOwnPropertyDescriptor(e,n).enumerable}))),t.push.apply(t,a)}return t}function o(e){for(var n=1;n<arguments.length;n++){var t=null!=arguments[n]?arguments[n]:{};n%2?l(Object(t),!0).forEach((function(n){r(e,n,t[n])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(t)):l(Object(t)).forEach((function(n){Object.defineProperty(e,n,Object.getOwnPropertyDescriptor(t,n))}))}return e}function s(e,n){if(null==e)return{};var t,a,r=function(e,n){if(null==e)return{};var t,a,r={},l=Object.keys(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||(r[t]=e[t]);return r}(e,n);if(Object.getOwnPropertySymbols){var l=Object.getOwnPropertySymbols(e);for(a=0;a<l.length;a++)t=l[a],n.indexOf(t)>=0||Object.prototype.propertyIsEnumerable.call(e,t)&&(r[t]=e[t])}return r}var p=a.createContext({}),i=function(e){var n=a.useContext(p),t=n;return e&&(t="function"==typeof e?e(n):o(o({},n),e)),t},u=function(e){var n=i(e.components);return a.createElement(p.Provider,{value:n},e.children)},d={inlineCode:"code",wrapper:function(e){var n=e.children;return a.createElement(a.Fragment,{},n)}},c=a.forwardRef((function(e,n){var t=e.components,r=e.mdxType,l=e.originalType,p=e.parentName,u=s(e,["components","mdxType","originalType","parentName"]),c=i(t),m=r,h=c["".concat(p,".").concat(m)]||c[m]||d[m]||l;return t?a.createElement(h,o(o({ref:n},u),{},{components:t})):a.createElement(h,o({ref:n},u))}));function m(e,n){var t=arguments,r=n&&n.mdxType;if("string"==typeof e||r){var l=t.length,o=new Array(l);o[0]=c;var s={};for(var p in n)hasOwnProperty.call(n,p)&&(s[p]=n[p]);s.originalType=e,s.mdxType="string"==typeof e?e:r,o[1]=s;for(var i=2;i<l;i++)o[i]=t[i];return a.createElement.apply(null,o)}return a.createElement.apply(null,t)}c.displayName="MDXCreateElement"},68175:function(e,n,t){t.r(n),t.d(n,{assets:function(){return u},contentTitle:function(){return p},default:function(){return m},frontMatter:function(){return s},metadata:function(){return i},toc:function(){return d}});var a=t(87462),r=t(63366),l=(t(67294),t(3905)),o=["components"],s={id:"SL-SurfaceShaderTessellation",title:"\u652f\u6301 DX11/OpenGL Core \u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668",slug:"/sl-surface-shaders/sl-surface-shader-tessellation"},p="\u652f\u6301 DX11/OpenGL Core \u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668",i={unversionedId:"graphics/shaders/shader-writing/sl-surface-shaders/SL-SurfaceShaderTessellation",id:"graphics/shaders/shader-writing/sl-surface-shaders/SL-SurfaceShaderTessellation",title:"\u652f\u6301 DX11/OpenGL Core \u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668",description:"\u5728\u5185\u7f6e\u6e32\u67d3\u7ba1\u7ebf\u4e2d\uff0c\u8868\u9762\u7740\u8272\u5668\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u652f\u6301 DirectX 11/OpenGL Core GPU \u66f2\u9762\u7ec6\u5206\u3002",source:"@site/docs/graphics/shaders/shader-writing/sl-surface-shaders/sl-surface-shader-tessellation.md",sourceDirName:"graphics/shaders/shader-writing/sl-surface-shaders",slug:"/sl-surface-shaders/sl-surface-shader-tessellation",permalink:"/docs/sl-surface-shaders/sl-surface-shader-tessellation",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/graphics/shaders/shader-writing/sl-surface-shaders/sl-surface-shader-tessellation.md",tags:[],version:"current",frontMatter:{id:"SL-SurfaceShaderTessellation",title:"\u652f\u6301 DX11/OpenGL Core \u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668",slug:"/sl-surface-shaders/sl-surface-shader-tessellation"},sidebar:"tutorialSidebar",previous:{title:"\u8868\u9762\u7740\u8272\u5668\u4e2d\u7684\u81ea\u5b9a\u4e49\u5149\u7167\u6a21\u578b",permalink:"/docs/sl-surface-shaders/sl-surface-shader-lighting"},next:{title:"\u7740\u8272\u5668\u6838\u5fc3\u6982\u5ff5",permalink:"/docs/shaders-overview"}},u={},d=[{value:"\u6e32\u67d3\u7ba1\u7ebf\u517c\u5bb9\u6027",id:"\u6e32\u67d3\u7ba1\u7ebf\u517c\u5bb9\u6027",level:2},{value:"\u6982\u8ff0",id:"\u6982\u8ff0",level:2},{value:"\u5728\u9876\u70b9\u4fee\u6539\u5668\u4e2d\u4e0d\u652f\u6301 GPU \u66f2\u9762\u7ec6\u5206\u548c\u4f4d\u79fb",id:"\u5728\u9876\u70b9\u4fee\u6539\u5668\u4e2d\u4e0d\u652f\u6301-gpu-\u66f2\u9762\u7ec6\u5206\u548c\u4f4d\u79fb",level:2},{value:"\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206",id:"\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206",level:2},{value:"\u57fa\u4e8e\u8ddd\u79bb\u7684\u66f2\u9762\u7ec6\u5206",id:"\u57fa\u4e8e\u8ddd\u79bb\u7684\u66f2\u9762\u7ec6\u5206",level:2},{value:"\u57fa\u4e8e\u8fb9\u957f\u7684\u66f2\u9762\u7ec6\u5206",id:"\u57fa\u4e8e\u8fb9\u957f\u7684\u66f2\u9762\u7ec6\u5206",level:2},{value:"Phong \u66f2\u9762\u7ec6\u5206",id:"phong-\u66f2\u9762\u7ec6\u5206",level:2}],c={toc:d};function m(e){var n=e.components,t=(0,r.Z)(e,o);return(0,l.kt)("wrapper",(0,a.Z)({},c,t,{components:n,mdxType:"MDXLayout"}),(0,l.kt)("h1",{id:"\u652f\u6301-dx11opengl-core-\u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668"},"\u652f\u6301 DX11/OpenGL Core \u66f2\u9762\u7ec6\u5206\u7684\u8868\u9762\u7740\u8272\u5668"),(0,l.kt)("p",null,"\u5728\u5185\u7f6e\u6e32\u67d3\u7ba1\u7ebf\u4e2d\uff0c",(0,l.kt)("a",{parentName:"p",href:"/docs/sl-surface-shaders"},"\u8868\u9762\u7740\u8272\u5668"),"\u5728\u4e00\u5b9a\u7a0b\u5ea6\u4e0a\u652f\u6301 DirectX 11/OpenGL Core GPU \u66f2\u9762\u7ec6\u5206\u3002"),(0,l.kt)("h2",{id:"\u6e32\u67d3\u7ba1\u7ebf\u517c\u5bb9\u6027"},"\u6e32\u67d3\u7ba1\u7ebf\u517c\u5bb9\u6027"),(0,l.kt)("table",null,(0,l.kt)("thead",{parentName:"table"},(0,l.kt)("tr",{parentName:"thead"},(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"\u529f\u80fd\u540d\u79f0")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"\u5185\u7f6e\u6e32\u67d3\u7ba1\u7ebf")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"\u901a\u7528\u6e32\u67d3\u7ba1\u7ebf (URP)")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"\u9ad8\u6e05\u6e32\u67d3\u7ba1\u7ebf (HDRP)")),(0,l.kt)("th",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"th"},"\u81ea\u5b9a\u4e49 SRP")))),(0,l.kt)("tbody",{parentName:"table"},(0,l.kt)("tr",{parentName:"tbody"},(0,l.kt)("td",{parentName:"tr",align:null},(0,l.kt)("strong",{parentName:"td"},"\u8868\u9762\u7740\u8272\u5668")),(0,l.kt)("td",{parentName:"tr",align:null},"\u662f"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5426",(0,l.kt)("br",null),(0,l.kt)("br",null),"\u6709\u5173\u5728 URP \u4e2d\u521b\u5efa Shader \u5bf9\u8c61\u7684\u7b80\u5316\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 ",(0,l.kt)("a",{parentName:"td",href:"/docs/shaders/shader-graph"},"Shader Graph"),"\u3002"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5426",(0,l.kt)("br",null),(0,l.kt)("br",null),"\u6709\u5173\u5728 HDRP \u4e2d\u521b\u5efa Shader \u5bf9\u8c61\u7684\u7b80\u5316\u65b9\u6cd5\uff0c\u8bf7\u53c2\u9605 ",(0,l.kt)("a",{parentName:"td",href:"/docs/shaders/shader-graph"},"Shader Graph"),"\u3002"),(0,l.kt)("td",{parentName:"tr",align:null},"\u5426")))),(0,l.kt)("h2",{id:"\u6982\u8ff0"},"\u6982\u8ff0"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f2\u9762\u7ec6\u5206\u7531 ",(0,l.kt)("inlineCode",{parentName:"li"},"tessellate:FunctionName")," \u4fee\u6539\u5668\u58f0\u660e\u3002\u8be5\u51fd\u6570\u8ba1\u7b97\u4e09\u89d2\u5f62\u7684\u8fb9\u548c\u5185\u90e8\u66f2\u9762\u7ec6\u5206\u56e0\u5b50\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u66f2\u9762\u7ec6\u5206\u65f6\uff0c\u5bf9\u4e8e\u57df\u7740\u8272\u5668\u4e2d\u7684\u6bcf\u4e2a\u751f\u6210\u7684\u9876\u70b9\uff0c\u5c06\u5728\u66f2\u9762\u7ec6\u5206","_","\u4e4b\u540e","_","\u8c03\u7528\u201c\u9876\u70b9\u4fee\u6539\u5668\u201d(",(0,l.kt)("inlineCode",{parentName:"li"},"vertex:FunctionName"),")\u3002\u8fd9\u91cc\u901a\u5e38\u8981\u8fdb\u884c\u7f6e\u6362\u8d34\u56fe\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5373\u4f7f\u6ca1\u6709\u4efb\u4f55\u4f4d\u79fb\u8d34\u56fe\uff0c\u8868\u9762\u7740\u8272\u5668\u4e5f\u53ef\u4ee5\u9009\u62e9\u8ba1\u7b97 ",(0,l.kt)("a",{parentName:"li",href:"https://www.google.lt/search?q=phong+tessellation"},"Phong \u66f2\u9762\u7ec6\u5206"),"\u6765\u5e73\u6ed1\u6a21\u578b\u8868\u9762\u3002")),(0,l.kt)("p",null,"\u5bf9\u4e8e\u66f2\u9762\u7ec6\u5206\u7684\u652f\u6301\u76ee\u524d\u5b58\u5728\u4ee5\u4e0b\u5c40\u9650\u6027\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u4ec5\u9650\u4e8e\u4e09\u89d2\u5f62\u57df - \u4e0d\u652f\u6301\u56db\u8fb9\u5f62\u548c\u7b49\u503c\u7ebf\u66f2\u9762\u7ec6\u5206\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u4f7f\u7528\u66f2\u9762\u7ec6\u5206\u65f6\uff0c\u7740\u8272\u5668\u4f1a\u81ea\u52a8\u7f16\u8bd1\u5230 Shader Model ",(0,l.kt)("a",{parentName:"li",href:"/docs/shader-preprocessor-directives/sl-shader-compile-targets"},"4.6 target"),"\uff0c\u5373\u8868\u793a\u5b83\u4ec5\u5728\u652f\u6301 DX11/12 OpenGL Core \u548c PS4/XB1 \u7684\u8bbe\u5907\u4e0a\u6b63\u5e38\u5de5\u4f5c\u3002")),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\u5728\u9876\u70b9\u4fee\u6539\u5668\u4e2d\u4e0d\u652f\u6301-gpu-\u66f2\u9762\u7ec6\u5206\u548c\u4f4d\u79fb"},"\u5728\u9876\u70b9\u4fee\u6539\u5668\u4e2d\u4e0d\u652f\u6301 GPU \u66f2\u9762\u7ec6\u5206\u548c\u4f4d\u79fb"),(0,l.kt)("p",null,"\u63a5\u4e0b\u6765\u8fd9\u4e2a\u793a\u4f8b\u4e2d\u7684\u8868\u9762\u7740\u8272\u5668\u5728","_","\u4e0d","_","\u4f7f\u7528\u66f2\u9762\u7ec6\u5206\u7684\u60c5\u51b5\u4e0b\u6267\u884c\u67d0\u79cd\u4f4d\u79fb\u8d34\u56fe\u3002\u5b83\u4ec5\u6839\u636e\u6765\u81ea\u4f4d\u79fb\u8d34\u56fe\u7684\u6570\u91cf\u6cbf\u7740\u6cd5\u7ebf\u79fb\u52a8\u9876\u70b9\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    Shader "Tessellation Sample" {\n            Properties {\n                _MainTex ("Base (RGB)", 2D) = "white" {}\n                _DispTex ("Disp Texture", 2D) = "gray" {}\n                _NormalMap ("Normalmap", 2D) = "bump" {}\n                _Displacement ("Displacement", Range(0, 1.0)) = 0.3\n                _Color ("Color", color) = (1,1,1,0)\n                _SpecColor ("Spec color", color) = (0.5,0.5,0.5,0.5)\n            }\n            SubShader {\n                Tags { "RenderType"="Opaque" }\n                LOD 300\n            \n                CGPROGRAM\n                #pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp nolightmap\n                #pragma target 4.6\n\n                struct appdata {\n                    float4 vertex : POSITION;\n                    float4 tangent : TANGENT;\n                    float3 normal : NORMAL;\n                    float2 texcoord : TEXCOORD0;\n                };\n\n                sampler2D _DispTex;\n                float _Displacement;\n\n                void disp (inout appdata v)\n                {\n                    float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;\n                    v.vertex.xyz += v.normal * d;\n                }\n\n                struct Input {\n                    float2 uv_MainTex;\n                };\n\n                sampler2D _MainTex;\n                sampler2D _NormalMap;\n                fixed4 _Color;\n\n                void surf (Input IN, inout SurfaceOutput o) {\n                    half4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n                    o.Albedo = c.rgb;\n                    o.Specular = 0.2;\n                    o.Gloss = 1.0;\n                    o.Normal = UnpackNormal(tex2D(_NormalMap, IN.uv_MainTex));\n                }\n                ENDCG\n            }\n            FallBack "Diffuse"\n        }\n')),(0,l.kt)("p",null,"\u4ee5\u4e0a\u7740\u8272\u5668\u76f8\u5f53\u6807\u51c6\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u9876\u70b9\u4fee\u6539\u5668 ",(0,l.kt)("inlineCode",{parentName:"li"},"disp")," \u5bf9\u4f4d\u79fb\u8d34\u56fe\u8fdb\u884c\u91c7\u6837\u5e76\u6cbf\u6cd5\u7ebf\u79fb\u52a8\u9876\u70b9\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u5b83\u4f7f\u7528\u81ea\u5b9a\u4e49\u7684\u201c\u9876\u70b9\u6570\u636e\u8f93\u5165\u201d\u7ed3\u6784 (",(0,l.kt)("inlineCode",{parentName:"li"},"appdata"),")\uff0c\u800c\u4e0d\u662f\u9ed8\u8ba4\u7684 ",(0,l.kt)("inlineCode",{parentName:"li"},"appdata_full"),"\u3002\u76ee\u524d\u8fd9\u8fd8\u4e0d\u662f\u5fc5\u9700\u7684\uff0c\u4f46\u662f\u4f7f\u7528\u5c3d\u53ef\u80fd\u5c0f\u7684\u7ed3\u6784\u8fdb\u884c\u66f2\u9762\u7ec6\u5206\u4f1a\u66f4\u9ad8\u6548\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u7531\u4e8e\u6211\u4eec\u7684\u9876\u70b9\u6570\u636e\u6ca1\u6709\u7b2c\u4e8c\u4e2a UV \u5750\u6807\uff0c\u6240\u4ee5\u6211\u4eec\u6dfb\u52a0 ",(0,l.kt)("inlineCode",{parentName:"li"},"nolightmap")," \u6307\u4ee4\u6765\u6392\u9664\u5149\u7167\u8d34\u56fe\u3002")),(0,l.kt)("p",null,"\u4e0b\u56fe\u663e\u793a\u4e86\u5e94\u7528\u6b64\u7740\u8272\u5668\u7684\u4e00\u4e9b\u7b80\u5355\u6e38\u620f\u5bf9\u8c61\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/SurfaceShaderTess1-none.jpg",alt:"SurfaceShaderTess1-none.jpg"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206"},"\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206"),(0,l.kt)("p",null,"\u5982\u679c\u6a21\u578b\u7684\u9762\u5728\u5c4f\u5e55\u4e0a\u7684\u5927\u5c0f\u5927\u81f4\u76f8\u540c\uff0c\u5219\u5411\u7f51\u683c\u6dfb\u52a0\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206\uff08\u6574\u4e2a\u7f51\u683c\u4e0a\u7684\u66f2\u9762\u7ec6\u5206\u7ea7\u522b\u76f8\u540c\uff09\u3002"),(0,l.kt)("p",null,"\u4ee5\u4e0b\u793a\u4f8b\u811a\u672c\u5e94\u7528\u4e86\u56fa\u5b9a\u91cf\u7684\u66f2\u9762\u7ec6\u5206\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    Shader "Tessellation Sample" {\n            Properties {\n                _Tess ("Tessellation", Range(1,32)) = 4\n                _MainTex ("Base (RGB)", 2D) = "white" {}\n                _DispTex ("Disp Texture", 2D) = "gray" {}\n                _NormalMap ("Normalmap", 2D) = "bump" {}\n                _Displacement ("Displacement", Range(0, 1.0)) = 0.3\n                _Color ("Color", color) = (1,1,1,0)\n                _SpecColor ("Spec color", color) = (0.5,0.5,0.5,0.5)\n            }\n            SubShader {\n                Tags { "RenderType"="Opaque" }\n                LOD 300\n            \n                CGPROGRAM\n                #pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessFixed nolightmap\n                #pragma target 4.6\n\n                struct appdata {\n                    float4 vertex : POSITION;\n                    float4 tangent : TANGENT;\n                    float3 normal : NORMAL;\n                    float2 texcoord : TEXCOORD0;\n                };\n\n                float _Tess;\n\n                float4 tessFixed()\n                {\n                    return _Tess;\n                }\n\n                sampler2D _DispTex;\n                float _Displacement;\n\n                void disp (inout appdata v)\n                {\n                    float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;\n                    v.vertex.xyz += v.normal * d;\n                }\n\n                struct Input {\n                    float2 uv_MainTex;\n                };\n\n                sampler2D _MainTex;\n                sampler2D _NormalMap;\n                fixed4 _Color;\n\n                void surf (Input IN, inout SurfaceOutput o) {\n                    half4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n                    o.Albedo = c.rgb;\n                    o.Specular = 0.2;\n                    o.Gloss = 1.0;\n                    o.Normal = UnpackNormal(tex2D(_NormalMap, IN.uv_MainTex));\n                }\n                ENDCG\n            }\n            FallBack "Diffuse"\n        }\n')),(0,l.kt)("p",null,"\u5728\u4e0a\u9762\u7684\u4f8b\u5b50\u4e2d\uff0c",(0,l.kt)("inlineCode",{parentName:"p"},"tessFixed")," \u66f2\u9762\u7ec6\u5206\u51fd\u6570\u4ee5\u5355\u4e2a float4 \u503c\u7684\u5f62\u5f0f\u8fd4\u56de\u56db\u4e2a\u66f2\u9762\u7ec6\u5206\u56e0\u5b50\uff1a\u4e09\u89d2\u5f62\u7684\u6bcf\u4e2a\u8fb9\u4e00\u5171\u4e09\u4e2a\u56e0\u5b50\uff0c\u8fd8\u6709\u4e09\u89d2\u5f62\u5185\u90e8\u7684\u4e00\u4e2a\u56e0\u5b50\u3002"),(0,l.kt)("p",null,"\u8be5\u793a\u4f8b\u8fd4\u56de\u6750\u8d28\u5c5e\u6027\u4e2d\u8bbe\u7f6e\u7684\u5e38\u91cf\u503c\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/SurfaceShaderTess2-fixed.jpg",alt:"SurfaceShaderTess2-fixed.jpg"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\u57fa\u4e8e\u8ddd\u79bb\u7684\u66f2\u9762\u7ec6\u5206"},"\u57fa\u4e8e\u8ddd\u79bb\u7684\u66f2\u9762\u7ec6\u5206"),(0,l.kt)("p",null,"\u60a8\u8fd8\u53ef\u4ee5\u6839\u636e\u4e0e\u6444\u50cf\u673a\u4e4b\u95f4\u7684\u8ddd\u79bb\u6765\u66f4\u6539\u66f2\u9762\u7ec6\u5206\u7ea7\u522b\u3002 \u4f8b\u5982\uff0c\u53ef\u5b9a\u4e49\u4e24\u4e2a\u8ddd\u79bb\u503c\uff1a"),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"\u66f2\u9762\u7ec6\u5206\u5904\u4e8e\u6700\u5927\u503c\u65f6\u7684\u8ddd\u79bb\uff08\u4f8b\u5982\uff0c10 \u7c73\uff09\u3002"),(0,l.kt)("li",{parentName:"ul"},"\u66f2\u9762\u7ec6\u5206\u7ea7\u522b\u9012\u51cf\u65f6\u7684\u8ddd\u79bb\uff08\u4f8b\u5982\uff0c20 \u7c73\uff09\u3002")),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    Shader "Tessellation Sample" {\n            Properties {\n                _Tess ("Tessellation", Range(1,32)) = 4\n                _MainTex ("Base (RGB)", 2D) = "white" {}\n                _DispTex ("Disp Texture", 2D) = "gray" {}\n                _NormalMap ("Normalmap", 2D) = "bump" {}\n                _Displacement ("Displacement", Range(0, 1.0)) = 0.3\n                _Color ("Color", color) = (1,1,1,0)\n                _SpecColor ("Spec color", color) = (0.5,0.5,0.5,0.5)\n            }\n            SubShader {\n                Tags { "RenderType"="Opaque" }\n                LOD 300\n            \n                CGPROGRAM\n                #pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessDistance nolightmap\n                #pragma target 4.6\n                #include "Tessellation.cginc"\n\n                struct appdata {\n                    float4 vertex : POSITION;\n                    float4 tangent : TANGENT;\n                    float3 normal : NORMAL;\n                    float2 texcoord : TEXCOORD0;\n                };\n\n                float _Tess;\n\n                float4 tessDistance (appdata v0, appdata v1, appdata v2) {\n                    float minDist = 10.0;\n                    float maxDist = 25.0;\n                    return UnityDistanceBasedTess(v0.vertex, v1.vertex, v2.vertex, minDist, maxDist, _Tess);\n                }\n\n                sampler2D _DispTex;\n                float _Displacement;\n\n                void disp (inout appdata v)\n                {\n                    float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;\n                    v.vertex.xyz += v.normal * d;\n                }\n\n                struct Input {\n                    float2 uv_MainTex;\n                };\n\n                sampler2D _MainTex;\n                sampler2D _NormalMap;\n                fixed4 _Color;\n\n                void surf (Input IN, inout SurfaceOutput o) {\n                    half4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n                    o.Albedo = c.rgb;\n                    o.Specular = 0.2;\n                    o.Gloss = 1.0;\n                    o.Normal = UnpackNormal(tex2D(_NormalMap, IN.uv_MainTex));\n                }\n                ENDCG\n            }\n            FallBack "Diffuse"\n        }\n')),(0,l.kt)("p",null,"\u8fd9\u91cc\uff0c\u66f2\u9762\u7ec6\u5206\u51fd\u6570\u5728\u66f2\u9762\u7ec6\u5206\u4e4b\u524d\u5c06\u4e09\u89d2\u5f62\u4e09\u4e2a\u89d2\u7684\u9876\u70b9\u6570\u636e\u4f5c\u4e3a\u5176\u4e09\u4e2a\u53c2\u6570\u3002"),(0,l.kt)("p",null,"Unity \u9700\u8981\u6b64\u6570\u636e\u6765\u8ba1\u7b97\u66f2\u9762\u7ec6\u5206\u7ea7\u522b\uff0c\u800c\u8fd9\u53d6\u51b3\u4e8e\u9876\u70b9\u4f4d\u7f6e\u3002"),(0,l.kt)("p",null,"\u8be5\u793a\u4f8b\u5305\u542b\u4e00\u4e2a\u5185\u7f6e\u7684 helper \u6587\u4ef6 Tessellation.cginc\uff0c\u5e76\u4ece\u8be5\u6587\u4ef6\u4e2d\u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"UnityDistanceBasedTess")," \u51fd\u6570\u6765\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u3002\u6b64\u51fd\u6570\u8ba1\u7b97\u6bcf\u4e2a\u9876\u70b9\u5230\u6444\u50cf\u673a\u7684\u8ddd\u79bb\uff0c\u5e76\u63a8\u5bfc\u51fa\u6700\u7ec8\u7684\u66f2\u9762\u7ec6\u5206\u56e0\u5b50\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/SurfaceShaderTess3-distance.jpg",alt:"SurfaceShaderTess3-distance.jpg"})),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"\u57fa\u4e8e\u8fb9\u957f\u7684\u66f2\u9762\u7ec6\u5206"},"\u57fa\u4e8e\u8fb9\u957f\u7684\u66f2\u9762\u7ec6\u5206"),(0,l.kt)("p",null,"\u7eaf\u7cb9\u57fa\u4e8e\u8ddd\u79bb\u7684\u66f2\u9762\u7ec6\u5206\u4ec5\u5728\u4e09\u89d2\u5f62\u5927\u5c0f\u975e\u5e38\u76f8\u4f3c\u65f6\u624d\u80fd\u8d77\u5230\u6709\u6548\u7684\u4f5c\u7528\u3002\u5728\u4e0a\u56fe\u4e2d\uff0c\u5177\u6709\u5c0f\u4e09\u89d2\u5f62\u7684\u6e38\u620f\u5bf9\u8c61\u88ab\u8fc7\u5ea6\u66f2\u9762\u7ec6\u5206\uff0c\u800c\u5177\u6709\u5927\u4e09\u89d2\u5f62\u7684\u6e38\u620f\u5bf9\u8c61\u5219\u66f2\u9762\u7ec6\u5206\u4e0d\u8db3\u3002"),(0,l.kt)("p",null,"\u4e00\u79cd\u6539\u5584\u65b9\u6cd5\u662f\u6839\u636e\u5c4f\u5e55\u4e0a\u7684\u4e09\u89d2\u5f62\u8fb9\u957f\u6765\u8ba1\u7b97\u66f2\u9762\u7ec6\u5206\u7ea7\u522b\u3002Unity \u5e94\u8be5\u5c06\u66f4\u5927\u7684\u7ec6\u5206\u56e0\u5b50\u5e94\u7528\u4e8e\u66f4\u957f\u7684\u8fb9\u3002"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    Shader "Tessellation Sample" {\n            Properties {\n                _EdgeLength ("Edge length", Range(2,50)) = 15\n                _MainTex ("Base (RGB)", 2D) = "white" {}\n                _DispTex ("Disp Texture", 2D) = "gray" {}\n                _NormalMap ("Normalmap", 2D) = "bump" {}\n                _Displacement ("Displacement", Range(0, 1.0)) = 0.3\n                _Color ("Color", color) = (1,1,1,0)\n                _SpecColor ("Spec color", color) = (0.5,0.5,0.5,0.5)\n            }\n            SubShader {\n                Tags { "RenderType"="Opaque" }\n                LOD 300\n            \n                CGPROGRAM\n                #pragma surface surf BlinnPhong addshadow fullforwardshadows vertex:disp tessellate:tessEdge nolightmap\n                #pragma target 4.6\n                #include "Tessellation.cginc"\n\n                struct appdata {\n                    float4 vertex : POSITION;\n                    float4 tangent : TANGENT;\n                    float3 normal : NORMAL;\n                    float2 texcoord : TEXCOORD0;\n                };\n\n                float _EdgeLength;\n\n                float4 tessEdge (appdata v0, appdata v1, appdata v2)\n                {\n                    return UnityEdgeLengthBasedTess (v0.vertex, v1.vertex, v2.vertex, _EdgeLength);\n                }\n\n                sampler2D _DispTex;\n                float _Displacement;\n\n                void disp (inout appdata v)\n                {\n                    float d = tex2Dlod(_DispTex, float4(v.texcoord.xy,0,0)).r * _Displacement;\n                    v.vertex.xyz += v.normal * d;\n                }\n\n                struct Input {\n                    float2 uv_MainTex;\n                };\n\n                sampler2D _MainTex;\n                sampler2D _NormalMap;\n                fixed4 _Color;\n\n                void surf (Input IN, inout SurfaceOutput o) {\n                    half4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n                    o.Albedo = c.rgb;\n                    o.Specular = 0.2;\n                    o.Gloss = 1.0;\n                    o.Normal = UnpackNormal(tex2D(_NormalMap, IN.uv_MainTex));\n                }\n                ENDCG\n            }\n            FallBack "Diffuse"\n        }\n')),(0,l.kt)("p",null,"\u5728\u6b64\u793a\u4f8b\u4e2d\uff0c\u4ece ",(0,l.kt)("em",{parentName:"p"},"Tessellation.cginc")," \u8c03\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"UnityEdgeLengthBasedTess")," \u51fd\u6570\u6765\u5b8c\u6210\u6240\u6709\u5de5\u4f5c\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/SurfaceShaderTess4-edgelength.jpg",alt:"SurfaceShaderTess4-edgelength.jpg"})),(0,l.kt)("p",null,"\u51fa\u4e8e\u6027\u80fd\u539f\u56e0\uff0c\u8bf7\u6539\u4e3a\u8c03\u7528 UnityEdgeLengthBasedTessCull \u51fd\u6570\uff0c\u8be5\u51fd\u6570\u5c06\u6267\u884c\u6837\u6761\u66f2\u7ebf\u89c6\u9525\u4f53\u5254\u9664\u3002\u8fd9\u4f1a\u4f7f\u7740\u8272\u5668\u7684\u6210\u672c\u7565\u5fae\u63d0\u9ad8\uff0c\u4f46\u4e3a\u6444\u50cf\u673a\u89c6\u56fe\u4e4b\u5916\u7684\u7f51\u683c\u90e8\u5206\u8282\u7701\u4e86\u5927\u91cf GPU \u5de5\u4f5c\u3002"),(0,l.kt)("hr",null),(0,l.kt)("h2",{id:"phong-\u66f2\u9762\u7ec6\u5206"},"Phong \u66f2\u9762\u7ec6\u5206"),(0,l.kt)("p",null,(0,l.kt)("a",{parentName:"p",href:"https://www.google.lt/search?q=phong+tessellation"},"Phong \u66f2\u9762\u7ec6\u5206"),"\u5c06\u4fee\u6539\u7ec6\u5206\u9762\u7684\u4f4d\u7f6e\uff0c\u4f7f\u5f97\u751f\u6210\u7684\u8868\u9762\u7a0d\u5fae\u8ddf\u968f\u7f51\u683c\u6cd5\u7ebf\u3002\u8fd9\u662f\u4f7f\u7b80\u5355\u591a\u8fb9\u5f62\u7f51\u683c\u53d8\u5f97\u66f4\u52a0\u5e73\u6ed1\u7684\u4e00\u79cd\u975e\u5e38\u6709\u6548\u7684\u65b9\u6cd5\u3002"),(0,l.kt)("p",null,"Unity \u7684\u8868\u9762\u7740\u8272\u5668\u53ef\u4ee5\u4f7f\u7528 ",(0,l.kt)("inlineCode",{parentName:"p"},"tessphong:VariableName")," \u7f16\u8bd1\u6307\u4ee4\u81ea\u52a8\u8ba1\u7b97 Phong \u66f2\u9762\u7ec6\u5206\u3002\u4e0b\u9762\u662f\u7740\u8272\u5668\u793a\u4f8b\uff1a"),(0,l.kt)("pre",null,(0,l.kt)("code",{parentName:"pre"},'    Shader "Phong Tessellation" {\n            Properties {\n                _EdgeLength ("Edge length", Range(2,50)) = 5\n                _Phong ("Phong Strengh", Range(0,1)) = 0.5\n                _MainTex ("Base (RGB)", 2D) = "white" {}\n                _Color ("Color", color) = (1,1,1,0)\n            }\n            SubShader {\n                Tags { "RenderType"="Opaque" }\n                LOD 300\n            \n                CGPROGRAM\n                #pragma surface surf Lambert vertex:dispNone tessellate:tessEdge tessphong:_Phong nolightmap\n                #include "Tessellation.cginc"\n\n                struct appdata {\n                    float4 vertex : POSITION;\n                    float3 normal : NORMAL;\n                    float2 texcoord : TEXCOORD0;\n                };\n\n                void dispNone (inout appdata v) { }\n\n                float _Phong;\n                float _EdgeLength;\n\n                float4 tessEdge (appdata v0, appdata v1, appdata v2)\n                {\n                    return UnityEdgeLengthBasedTess (v0.vertex, v1.vertex, v2.vertex, _EdgeLength);\n                }\n\n                struct Input {\n                    float2 uv_MainTex;\n                };\n\n                fixed4 _Color;\n                sampler2D _MainTex;\n\n                void surf (Input IN, inout SurfaceOutput o) {\n                    half4 c = tex2D (_MainTex, IN.uv_MainTex) * _Color;\n                    o.Albedo = c.rgb;\n                    o.Alpha = c.a;\n                }\n\n                ENDCG\n            }\n            FallBack "Diffuse"\n        }\n')),(0,l.kt)("p",null,"\u4ee5\u4e0b\u662f\u5e38\u89c4\u7740\u8272\u5668\uff08\u4e0a\u6392\uff09\u548c\u4f7f\u7528 Phong \u66f2\u9762\u7ec6\u5206\u7684\u7740\u8272\u5668\uff08\u4e0b\u6392\uff09\u4e4b\u95f4\u7684\u6bd4\u8f83\u3002\u53ef\u4ee5\u770b\u51fa\uff0c\u5373\u4f7f\u6ca1\u6709\u4efb\u4f55\u4f4d\u79fb\u8d34\u56fe\uff0c\u8868\u9762\u4e5f\u4f1a\u53d8\u5f97\u66f4\u5706\u3002"),(0,l.kt)("p",null,(0,l.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/SurfaceShaderPhongTess.jpg",alt:"SurfaceShaderPhongTess.jpg"})),(0,l.kt)("hr",null),(0,l.kt)("ul",null,(0,l.kt)("li",{parentName:"ul"},"2018\u201303\u201320 \u9875\u9762\u5df2\u4fee\u8ba2"),(0,l.kt)("li",{parentName:"ul"},"\u5728 2018.1 \u7248\u4e2d\u6dfb\u52a0\u4e86 ",(0,l.kt)("strong",{parentName:"li"},"Metal \u66f2\u9762\u7ec6\u5206")," ")))}m.isMDXComponent=!0}}]);