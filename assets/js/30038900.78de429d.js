"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[57534],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var o=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);t&&(o=o.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,o)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,o,a=function(e,t){if(null==e)return{};var n,o,a={},r=Object.keys(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(o=0;o<r.length;o++)n=r[o],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var l=o.createContext({}),c=function(e){var t=o.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=c(e.components);return o.createElement(l.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return o.createElement(o.Fragment,{},t)}},d=o.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,l=e.parentName,p=s(e,["components","mdxType","originalType","parentName"]),d=c(n),m=a,h=d["".concat(l,".").concat(m)]||d[m]||u[m]||r;return n?o.createElement(h,i(i({ref:t},p),{},{components:n})):o.createElement(h,i({ref:t},p))}));function m(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,i=new Array(r);i[0]=d;var s={};for(var l in t)hasOwnProperty.call(t,l)&&(s[l]=t[l]);s.originalType=e,s.mdxType="string"==typeof e?e:a,i[1]=s;for(var c=2;c<r;c++)i[c]=n[c];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},15343:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return l},default:function(){return m},frontMatter:function(){return s},metadata:function(){return c},toc:function(){return u}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),i=["components"],s={id:"overview-of-dot-net-in-unity",title:"Unity \u4e2d\u7684 .NET \u6982\u8ff0",slug:"/overview-of-dot-net-in-unity"},l="Unity \u4e2d\u7684 .NET \u6982\u8ff0",c={unversionedId:"scripting-section/unity-architecture/overview-of-dot-net-in-unity/overview-of-dot-net-in-unity",id:"scripting-section/unity-architecture/overview-of-dot-net-in-unity/overview-of-dot-net-in-unity",title:"Unity \u4e2d\u7684 .NET \u6982\u8ff0",description:"Unity uses the open-source .NET platform to ensure that applications you make with Unity can run on a wide variety of different hardware configurations. The .NET platform supports a range of languages and API libraries.",source:"@site/docs/scripting-section/unity-architecture/overview-of-dot-net-in-unity/overview-of-dot-net-in-unity.md",sourceDirName:"scripting-section/unity-architecture/overview-of-dot-net-in-unity",slug:"/overview-of-dot-net-in-unity",permalink:"/doc-unity-manual/docs/overview-of-dot-net-in-unity",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scripting-section/unity-architecture/overview-of-dot-net-in-unity/overview-of-dot-net-in-unity.md",tags:[],version:"current",frontMatter:{id:"overview-of-dot-net-in-unity",title:"Unity \u4e2d\u7684 .NET \u6982\u8ff0",slug:"/overview-of-dot-net-in-unity"},sidebar:"tutorialSidebar",previous:{title:"\u542f\u52a8\u65f6\u8fd0\u884c Editor \u811a\u672c\u4ee3\u7801",permalink:"/doc-unity-manual/docs/code-reloading-editor/running-editor-code-on-launch"},next:{title:"C# \u7f16\u8bd1\u5668",permalink:"/doc-unity-manual/docs/overview-of-dot-net-in-unity/csharp-compiler"}},p={},u=[{value:"\u811a\u672c\u540e\u7aef",id:"\u811a\u672c\u540e\u7aef",level:2},{value:"\u6258\u7ba1\u4ee3\u7801\u5265\u79bb",id:"\u6258\u7ba1\u4ee3\u7801\u5265\u79bb",level:2},{value:"\u5783\u573e\u6536\u96c6",id:"\u5783\u573e\u6536\u96c6",level:2},{value:".NET \u7cfb\u7edf\u5e93",id:"net-\u7cfb\u7edf\u5e93",level:2},{value:"\u4f7f\u7528\u7b2c\u4e09\u65b9 .NET \u5e93",id:"\u4f7f\u7528\u7b2c\u4e09\u65b9-net-\u5e93",level:2},{value:"C# \u53cd\u5c04\u5f00\u9500",id:"c-\u53cd\u5c04\u5f00\u9500",level:2},{value:"UnityEngine.Object \u7279\u6b8a\u884c\u4e3a",id:"unityengineobject-\u7279\u6b8a\u884c\u4e3a",level:2},{value:"Unity C# \u548c Unity C++ \u5171\u4eab UnityEngine \u5bf9\u8c61",id:"unity-c-\u548c-unity-c-\u5171\u4eab-unityengine-\u5bf9\u8c61",level:3},{value:"Limitations of async and await tasks",id:"limitations-of-async-and-await-tasks",level:2}],d={toc:u};function m(e){var t=e.components,n=(0,a.Z)(e,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"unity-\u4e2d\u7684-net-\u6982\u8ff0"},"Unity \u4e2d\u7684 .NET \u6982\u8ff0"),(0,r.kt)("p",null,"Unity uses the open-source .NET platform to ensure that applications you make with Unity can run on a wide variety of different hardware configurations. The .NET platform supports a range of languages and API libraries."),(0,r.kt)("h2",{id:"\u811a\u672c\u540e\u7aef"},"\u811a\u672c\u540e\u7aef"),(0,r.kt)("p",null,"Unity has two scripting backends; Mono, and ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/il2cpp"},"IL2CPP")," (Intermediate Language To C++), each of which uses a different compilation technique:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Mono \u4f7f\u7528\u5373\u65f6 (JIT) \u7f16\u8bd1\uff0c\u5728\u8fd0\u884c\u65f6\u6309\u9700\u7f16\u8bd1\u4ee3\u7801\u3002"),(0,r.kt)("li",{parentName:"ul"},"IL2CPP uses ahead-of-time (AOT) compilation and compiles your entire application before it runs.")),(0,r.kt)("p",null,"The benefit of using a JIT-based scripting backend is that the compilation time is typically much faster than AOT."),(0,r.kt)("p",null,"By default, Unity uses the Mono backend on platforms that support Mono. When you build a player for your application, you can choose which scripting backend to use. To do this through the Editor, go to  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Project Settings"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Player")," , open the  ",(0,r.kt)("strong",{parentName:"p"},"Other Settings"),"  panel, then click on the  ",(0,r.kt)("strong",{parentName:"p"},"Scripting Backend"),"  dropdown and select which backend you want. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/scripting-backends"},"Scripting backends"),"."),(0,r.kt)("h2",{id:"\u6258\u7ba1\u4ee3\u7801\u5265\u79bb"},"\u6258\u7ba1\u4ee3\u7801\u5265\u79bb"),(0,r.kt)("p",null,"When you build an application, Unity compiles and then searches the assemblies (.DLLs) in your project to detect and remove unused code. This process of stripping code reduces the final binary size of your build, but increases build time."),(0,r.kt)("p",null,"Code stripping is disabled by default when you use Mono but code stripping can\u2019t be disabled for IL2CPP. You can control how much code Unity strips with the  ",(0,r.kt)("strong",{parentName:"p"},"Managed Stripping Level"),"  property."),(0,r.kt)("p",null,"To change this property, go to  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Project Settings"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Player")," , open the  ",(0,r.kt)("strong",{parentName:"p"},"Other Settings"),"  panel, then click on the  ",(0,r.kt)("strong",{parentName:"p"},"Managed Stripping Level"),"  dropdown and select a stripping level."),(0,r.kt)("p",null,"As you increase the  ",(0,r.kt)("strong",{parentName:"p"},"Managed Stripping Level")," , Unity removes more code. This increases the risk that Unity might remove code that your application relies on, especially if you use reflection or generate code at runtime."),(0,r.kt)("p",null,"You can use annotations on certain elements of your code to prevent Unity from stripping it. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/scripting-backends/managed-code-stripping"},"Managed Code Stripping"),"."),(0,r.kt)("h2",{id:"\u5783\u573e\u6536\u96c6"},"\u5783\u573e\u6536\u96c6"),(0,r.kt)("p",null,"Unity uses the ",(0,r.kt)("a",{parentName:"p",href:"https://en.wikipedia.org/wiki/Boehm_garbage_collector"},"Boehm garbage collector")," for both the Mono and IL2CPP backends. Unity uses the  ",(0,r.kt)("strong",{parentName:"p"},"Incremental"),"  mode by default. You can disable the  ",(0,r.kt)("strong",{parentName:"p"},"Incremental"),"  mode to use stop-the-world garbage collection, although Unity recommends the  ",(0,r.kt)("strong",{parentName:"p"},"Incremental"),"  mode."),(0,r.kt)("p",null,"To toggle between Incremental mode and stop-the-world, go to  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Project Settings"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Player")," , open the  ",(0,r.kt)("strong",{parentName:"p"},"Other Settings"),"  panel and click on the  ",(0,r.kt)("strong",{parentName:"p"},"Use incremental GC"),"  checkbox. In  ",(0,r.kt)("strong",{parentName:"p"},"Incremental"),"  mode, Unity\u2019s garbage collector only runs for a limited period of time and doesn\u2019t necessarily collect all objects in one pass. This spreads the time it takes to collect objects over multiple frames and reduces stuttering and CPU spikes. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/performance-memory-overview/performance-managed-memory"},"Managed memory"),"."),(0,r.kt)("p",null,"To check the number of allocations and possible CPU spikes in your application, use the ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/profiler"},"Unity Profiler"),". You can also use the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Scripting.GarbageCollector.html"},"GarbageCollector")," API to completely disable garbage collection in Players. When the collector is disabled, be careful to avoid allocating excess memory."),(0,r.kt)("h2",{id:"net-\u7cfb\u7edf\u5e93"},".NET \u7cfb\u7edf\u5e93"),(0,r.kt)("p",null,"Unity supports many platforms and might use different scripting backends depending on the platform. The .NET system libraries require platform-specific implementations to work correctly in some cases. While Unity tries its best to support as much of the .NET ecosystem as possible, there are some exceptions to parts of the .NET system libraries that Unity explicitly doesn\u2019t support."),(0,r.kt)("p",null,"Unity makes no performance or allocation guarantees for the .NET system libraries across Unity versions. Generally, Unity doesn\u2019t fix any performance regressions in the .NET system libraries."),(0,r.kt)("p",null,"Unity doesn\u2019t support the System.Drawing library and it isn\u2019t guaranteed to work on all platforms."),(0,r.kt)("p",null,"The JIT compilation that the Mono scripting backend uses enables you to emit dynamic C#/.NET Intermediate Language (IL) code generation during the runtime of your application. The AOT compilation that the IL2CPP scripting backend uses doesn\u2019t support dynamic code generation."),(0,r.kt)("p",null,"This is important to consider when you use third-party libraries, because they might have different code paths for JIT and AOT, or they might use code paths that rely on dynamically generated code. For more information on how to generate code at runtime, see Microsoft\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.emit.modulebuilder?view=netcore-3.1"},"ModuleBuilder")," documentation."),(0,r.kt)("p",null,"Although Unity supports multiple .NET API profiles, you should use the .NET Standard ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/ApiCompatibilityLevel.html"},"API Compatibility Level")," for all new projects for the following reasons:"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},".NET Standard is a smaller API surface and so has a smaller implementation. This reduces the size of your final executable file."),(0,r.kt)("li",{parentName:"ul"},".NET Standard has better cross-platform support, so your code is more likely to work across all platforms."),(0,r.kt)("li",{parentName:"ul"},"All .NET runtimes support .NET Standard, so your code works across more VM/runtime environments (for example, .NET Framework. .NET Core, Xamarin, Unity) when you use .NET Standard."),(0,r.kt)("li",{parentName:"ul"},".NET Standard moves more errors to compile time. A number of APIs in .NET Framework are available at compile time, but have implementations on some platforms that throw an exception at runtime.")),(0,r.kt)("p",null,"Other profiles can be useful if, for example, you need to provide support for an older existing application. To change the  ",(0,r.kt)("strong",{parentName:"p"},"Api Compatibility Level"),"  setting, go to  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Project Settings"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Player")," . Under the  ",(0,r.kt)("strong",{parentName:"p"},"Other Settings"),"  heading, set the  ",(0,r.kt)("strong",{parentName:"p"},"Api Compatibility Level"),"  to the desired setting."),(0,r.kt)("p",null,"For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/overview-of-dot-net-in-unity/dotnet-profile-support"},".NET Profile Support"),"."),(0,r.kt)("h2",{id:"\u4f7f\u7528\u7b2c\u4e09\u65b9-net-\u5e93"},"\u4f7f\u7528\u7b2c\u4e09\u65b9 .NET \u5e93"),(0,r.kt)("p",null,"\u5e94\u8be5\u53ea\u4f7f\u7528\u5728\u5404\u79cd Unity \u914d\u7f6e\u548c\u5e73\u53f0\u4e0a\u7ecf\u8fc7\u5e7f\u6cdb\u6d4b\u8bd5\u7684\u7b2c\u4e09\u65b9 .NET \u5e93\u3002"),(0,r.kt)("p",null,"The performance characteristics of JIT and AOT code paths in third-party libraries might be significantly different. AOT generally reduces startup times and is suited to larger applications for this reason but increases the binary file size to accommodate the compiled code. AOT also takes longer to build during development."),(0,r.kt)("p",null,"JIT adjusts at runtime based on the platform it\u2019s running on, which can increase running performance at the cost of a potentially longer application startup time. As such, you should profile your application in both the Editor, and on your target platform. For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/profiler"},"Profiler overview"),"."),(0,r.kt)("p",null,"You should profile the usage of your .NET system libraries on all target platforms because their performance characteristics might vary depending on the scripting backends, .NET versions, and profiles you use."),(0,r.kt)("p",null,"\u67e5\u770b\u7b2c\u4e09\u65b9\u5e93\u65f6\uff0c\u8bf7\u8003\u8651\u4ee5\u4e0b\u65b9\u9762\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"\u517c\u5bb9\u6027\uff1a\u7b2c\u4e09\u65b9\u5e93\u53ef\u80fd\u4e0e\u67d0\u4e9b Unity \u5e73\u53f0\u548c\u811a\u672c\u540e\u7aef\u4e0d\u517c\u5bb9\u3002"),(0,r.kt)("li",{parentName:"ul"},"\u6027\u80fd\uff1a\u4e0e\u5176\u4ed6 .NET \u8fd0\u884c\u65f6\u76f8\u6bd4\uff0c\u7b2c\u4e09\u65b9\u5e93\u5728 Unity \u4e2d\u53ef\u80fd\u5177\u6709\u622a\u7136\u4e0d\u540c\u7684\u6027\u80fd\u7279\u5f81\u3002"),(0,r.kt)("li",{parentName:"ul"},"AOT \u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u5c0f\uff1a\u7531\u4e8e\u5e93\u4f7f\u7528\u7684\u4f9d\u8d56\u9879\u6570\u91cf\uff0c\u7b2c\u4e09\u65b9\u5e93\u53ef\u80fd\u4f1a\u663e\u8457\u589e\u5927 AOT \u4e8c\u8fdb\u5236\u6587\u4ef6\u5927\u5c0f\u3002")),(0,r.kt)("h2",{id:"c-\u53cd\u5c04\u5f00\u9500"},"C# \u53cd\u5c04\u5f00\u9500"),(0,r.kt)("p",null,"Mono and IL2CPP internally cache all C# reflection (System.Reflection) objects and by design, Unity doesn\u2019t garbage collect them. The result of this behavior is that the garbage collector continuously scans the cached C# reflection objects during the lifetime of your application, which causes unnecessary and potentially significant garbage collector overhead."),(0,r.kt)("p",null,"\u8981\u6700\u5927\u7a0b\u5ea6\u51cf\u5c11\u5783\u573e\u56de\u6536\u5668\u5f00\u9500\uff0c\u8bf7\u5728\u5e94\u7528\u7a0b\u5e8f\u4e2d\u907f\u514d\u4f7f\u7528\u8bf8\u5982 ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.reflection.assembly.gettypes"},"Assembly.GetTypes")," \u548c ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.type.getmethods"},"Type.GetMethods()")," \u7b49\u65b9\u6cd5\uff0c\u8fd9\u4e9b\u65b9\u6cd5\u4f1a\u5728\u8fd0\u884c\u65f6\u521b\u5efa\u8bb8\u591a C# \u53cd\u5c04\u5bf9\u8c61\u3002\u800c\u662f\u5e94\u8be5\u5728\u7f16\u8f91\u5668\u4e2d\u626b\u63cf\u7a0b\u5e8f\u96c6\u4ee5\u83b7\u53d6\u6240\u9700\u6570\u636e\uff0c\u5e76\u8fdb\u884c\u5e8f\u5217\u5316\u548c/\u6216\u4ee3\u7801\u751f\u6210\u4ee5\u5728\u8fd0\u884c\u65f6\u4f7f\u7528\u3002"),(0,r.kt)("h2",{id:"unityengineobject-\u7279\u6b8a\u884c\u4e3a"},"UnityEngine.Object \u7279\u6b8a\u884c\u4e3a"),(0,r.kt)("p",null,(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/scripting-important-classes/class-object"},"UnityEngine.Object")," is a special type of C# object in Unity, because it\u2019s linked to a native C++ counterpart object. For example, when you use a ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Camera.html"},"Camera")," component, Unity stores the state of the object on the object\u2019s native C++ counterpart, not on the C# object itself."),(0,r.kt)("p",null,(0,r.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/unity-engine-object.png",alt:"unity-engine-object.png"})),(0,r.kt)("p",null,"Unity doesn\u2019t currently support the use of the C# WeakReference class with instances of UnityEngine.Object. For this reason, you shouldn\u2019t use a WeakReference to reference a loaded asset. See Microsoft\u2019s ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.weakreference?view=netcore-3.1"},"WeakReference documentation")," for more information on the WeakReference class."),(0,r.kt)("h3",{id:"unity-c-\u548c-unity-c-\u5171\u4eab-unityengine-\u5bf9\u8c61"},"Unity C# \u548c Unity C++ \u5171\u4eab UnityEngine \u5bf9\u8c61"),(0,r.kt)("p",null,"When you use a method such as ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Object.Destroy.html"},"Object.Destroy")," or ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Object.DestroyImmediate.html"},"Object.DestroyImmediate")," to destroy a UnityEngine.Object derived object, Unity destroys (unloads) the native counter object. You can\u2019t destroy the C# object with an explicit call, because the garbage collector manages the memory. Once there are no longer any references to the managed object, the garbage collector collects and destroys it."),(0,r.kt)("p",null,"If your application tries to access a destroyed UnityEngine.Object again, Unity recreates the native counterpart object for most types. Two exceptions to this recreation behavior are ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/MonoBehaviour.html"},"MonoBehaviour")," and ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/ScriptableObject.html"},"ScriptableObject"),": Unity never reloads them once they have been destroyed."),(0,r.kt)("p",null,"MonoBehaviour and ScriptableObject override the equality (==) and inequality (!=) operators. If you compare a destroyed MonoBehaviour or ScriptableObject against ",(0,r.kt)("inlineCode",{parentName:"p"},"null"),", the operators return true when the managed object still exists and hasn\u2019t yet been garbage collected."),(0,r.kt)("p",null,"Because you can\u2019t overload the ?? and ?. operators, they aren\u2019t compatible with objects that derive from UnityEngine.Object. The operators don\u2019t return the same results as the equality and inequality operators when you use them on a destroyed MonoBehaviour or ScriptableObject while the managed object still exists."),(0,r.kt)("h2",{id:"limitations-of-async-and-await-tasks"},"Limitations of async and await tasks"),(0,r.kt)("p",null,"The Unity API isn\u2019t thread safe and therefore, you should only use async and await tasks from inside the UnitySynchronizationContext. Async tasks often allocate objects when invoked, which might cause performance issues if you overuse them."),(0,r.kt)("p",null,"Unity overwrites the default ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/archive/msdn-magazine/2011/february/msdn-magazine-parallel-computing-it-s-all-about-the-synchronizationcontext"},"SynchronizationContext")," with a custom ",(0,r.kt)("a",{parentName:"p",href:"https://github.com/Unity-Technologies/UnityCsReference/blob/master/Runtime/Export/Scripting/UnitySynchronizationContext.cs"},"UnitySynchronizationContext")," and runs all the tasks on the main thread in both  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  and  ",(0,r.kt)("strong",{parentName:"p"},"Play"),"  modes by default. To use async tasks, you must manually create and handle your own threads with the ",(0,r.kt)("a",{parentName:"p",href:"https://docs.microsoft.com/en-us/dotnet/api/system.threading.tasks.task.run?view=net-5.0"},"Task.Run")," API, and use the default SynchronizationContext instead of the Unity version."),(0,r.kt)("p",null,"Unity doesn\u2019t automatically stop async tasks that run on managed threads when you exit Play mode. To listen for enter and exit Play mode events to stop the tasks manually, use ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/EditorApplication.playModeStateChanged.html"},"EditorApplication.playModeStateChanged"),". If you take this approach, most of the Unity scripting APIs aren\u2019t available to use unless you migrate the context back to the UnitySynchronizationContext."),(0,r.kt)("p",null,"In development builds, Unity displays the following error message if you try to use Unity APIs in multithreaded code:"),(0,r.kt)("pre",null,(0,r.kt)("code",{parentName:"pre"},"\nUnityException: Internal_CreateGameObject can only be called from the main thread. \\\n\nConstructors and field initializers will be executed from the loading thread when loading a scene. \\\n\nDon't use this function in the constructor or field initializers, instead move initialization code to the Awake or Start function.\n\n")),(0,r.kt)("p",null,"For performance reasons, Unity doesn\u2019t perform checks for multithreaded behavior in non-development builds and doesn\u2019t display this error in live builds. This means that while Unity doesn\u2019t prevent execution of multithreaded code on live builds, random crashes and other unpredictable errors are likely if you do use multiple threads. For this reason, Unity recommends that you don\u2019t use multithreading."),(0,r.kt)("p",null,"To take advantage of the benefits of multithreading safely, use the ",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/job-system"},"C# Job System"),". The Job System uses multiple threads safely to execute jobs in parallel and achieve the performance benefits of multithreading. For more information, see ","[",(0,r.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/job-system/job-system-multithreading"},"What is multithreading?"),"."))}m.isMDXComponent=!0}}]);