"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[80036],{3905:function(t,e,n){n.d(e,{Zo:function(){return u},kt:function(){return m}});var o=n(67294);function a(t,e,n){return e in t?Object.defineProperty(t,e,{value:n,enumerable:!0,configurable:!0,writable:!0}):t[e]=n,t}function r(t,e){var n=Object.keys(t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(t);e&&(o=o.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),n.push.apply(n,o)}return n}function i(t){for(var e=1;e<arguments.length;e++){var n=null!=arguments[e]?arguments[e]:{};e%2?r(Object(n),!0).forEach((function(e){a(t,e,n[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(n,e))}))}return t}function p(t,e){if(null==t)return{};var n,o,a=function(t,e){if(null==t)return{};var n,o,a={},r=Object.keys(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||(a[n]=t[n]);return a}(t,e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(t);for(o=0;o<r.length;o++)n=r[o],e.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(t,n)&&(a[n]=t[n])}return a}var s=o.createContext({}),l=function(t){var e=o.useContext(s),n=e;return t&&(n="function"==typeof t?t(e):i(i({},e),t)),n},u=function(t){var e=l(t.components);return o.createElement(s.Provider,{value:e},t.children)},c={inlineCode:"code",wrapper:function(t){var e=t.children;return o.createElement(o.Fragment,{},e)}},d=o.forwardRef((function(t,e){var n=t.components,a=t.mdxType,r=t.originalType,s=t.parentName,u=p(t,["components","mdxType","originalType","parentName"]),d=l(n),m=a,h=d["".concat(s,".").concat(m)]||d[m]||c[m]||r;return n?o.createElement(h,i(i({ref:e},u),{},{components:n})):o.createElement(h,i({ref:e},u))}));function m(t,e){var n=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var r=n.length,i=new Array(r);i[0]=d;var p={};for(var s in e)hasOwnProperty.call(e,s)&&(p[s]=e[s]);p.originalType=t,p.mdxType="string"==typeof t?t:a,i[1]=p;for(var l=2;l<r;l++)i[l]=n[l];return o.createElement.apply(null,i)}return o.createElement.apply(null,n)}d.displayName="MDXCreateElement"},65796:function(t,e,n){n.r(e),n.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return p},metadata:function(){return l},toc:function(){return c}});var o=n(87462),a=n(63366),r=(n(67294),n(3905)),i=["components"],p={id:"tvos-supporting-input-devices",title:"Supporting input devices on tvOS",slug:"/tv-os-developing/tvos-supporting-input-devices"},s="Supporting input devices on tvOS",l={unversionedId:"platform-specific/tv-os-introducing/tv-os-developing/tvos-supporting-input-devices",id:"platform-specific/tv-os-introducing/tv-os-developing/tvos-supporting-input-devices",title:"Supporting input devices on tvOS",description:"While tvOS builds on the foundation of iOS, it does create new challenges such as adapting content to function with tvOS inputs, and for display on a bigger screen.",source:"@site/docs/platform-specific/tv-os-introducing/tv-os-developing/tvos-supporting-input-devices.md",sourceDirName:"platform-specific/tv-os-introducing/tv-os-developing",slug:"/tv-os-developing/tvos-supporting-input-devices",permalink:"/docs/tv-os-developing/tvos-supporting-input-devices",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/platform-specific/tv-os-introducing/tv-os-developing/tvos-supporting-input-devices.md",tags:[],version:"current",frontMatter:{id:"tvos-supporting-input-devices",title:"Supporting input devices on tvOS",slug:"/tv-os-developing/tvos-supporting-input-devices"},sidebar:"tutorialSidebar",previous:{title:"Setting up app navigation from the Unity UI",permalink:"/docs/tv-os-developing/tvos-setting-up-application-navigation"},next:{title:"Building your application for tvOS",permalink:"/docs/tv-os-introducing/tvos-building-your-application"}},u={},c=[{value:"Apple TV Remote",id:"apple-tv-remote",level:2},{value:"Made for iOS (MFi)",id:"made-for-ios-mfi",level:2}],d={toc:c};function m(t){var e=t.components,n=(0,a.Z)(t,i);return(0,r.kt)("wrapper",(0,o.Z)({},d,n,{components:e,mdxType:"MDXLayout"}),(0,r.kt)("h1",{id:"supporting-input-devices-on-tvos"},"Supporting input devices on tvOS"),(0,r.kt)("p",null,"While tvOS builds on the foundation of iOS, it does create new challenges such as adapting content to function with tvOS inputs, and for display on a bigger screen."),(0,r.kt)("p",null,"tvOS \u6709\u4e24\u79cd\u4e3b\u8981\u8f93\u5165\uff1a"),(0,r.kt)("ul",null,(0,r.kt)("li",{parentName:"ul"},"Apple TV \u9065\u63a7\u5668\uff08\u5f3a\u5236\u6027\u8f93\u5165\uff09"),(0,r.kt)("li",{parentName:"ul"},"Made For iOS (MFi) \u63a7\u5236\u5668\uff08\u53ef\u9009\uff09")),(0,r.kt)("h2",{id:"apple-tv-remote"},"Apple TV Remote"),(0,r.kt)("p",null,"The Apple TV Remote (Siri Remote) is a multi-purpose input device that works as a traditional menu navigation controller, app controller, gyroscope, acceleration sensor, and as a touch gesture device. Unity routes Apple TV Remote input to corresponding Unity APIs, but performs no other processing on that input.Your application might need some adjustments to its input scheme to leverage the Apple TV Remote\u2019s specific input features. For instance, your application can treat it as a traditional application controller, with one analog axis and an extra action button, or your application can use the accelerometer for interactions such as steering. You can experiment with various schemes when porting an app to tvOS."),(0,r.kt)("h2",{id:"made-for-ios-mfi"},"Made for iOS (MFi)"),(0,r.kt)("p",null,"Unity offers Made For iOS (MFi), which is standardized controller support for iOS and tvOS. MFi controllers offer out of the box input mappings, and you can set up custom action mappings in the Unity Editor (menu:  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","*","*"," Project Settings  ",(0,r.kt)("strong",{parentName:"p"},"\\",">"),"  Input Manager","*","*","). For more information, see ",(0,r.kt)("a",{parentName:"p",href:"/docs/iphone-api/iphone-joystick"},"iOS Game Controller support"),", and ",(0,r.kt)("a",{parentName:"p",href:"https://developer.apple.com/design/human-interface-guidelines/tvos/remote-and-controllers/game-controllers/"},"Game Controllers"),"."),(0,r.kt)("p",null,"Two further wireless MFi controllers can be connected to an Apple TV device, which effectively turns it into a console. Your application can use the controllers in the same way as iOS MFi controllers, but you must ensure its usability with the Apple TV Remote alone. The tvOS system limits the number of additional controllers to two."),(0,r.kt)("p",null,"\u4ee5\u4e0b\u662f\u5173\u4e8e\u8bbf\u95ee\u7279\u5b9a TV \u9065\u63a7\u5668\u529f\u80fd\u7684\u4e00\u4e9b\u6280\u672f\u7ec6\u8282\uff1a"),(0,r.kt)("table",null,(0,r.kt)("thead",{parentName:"table"},(0,r.kt)("tr",{parentName:"thead"},(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"Apple TV Remote button or function")),(0,r.kt)("th",{parentName:"tr",align:null},(0,r.kt)("strong",{parentName:"th"},"\u6ce8\u610f\u4e8b\u9879")))),(0,r.kt)("tbody",{parentName:"table"},(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u89e6\u63a7\u533a\u57df"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps to both ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Input-touches.html"},"Input.touches")," (",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Touch-type.html"},"Touch.type")," is set to ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/TouchType.Indirect.html"},"Indirect")," and is ignored by the Unity GUI), and the Joystick Input API (for example, ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Input.GetAxis.html"},"Input.GetAxis(\u201cHorizontal\u201d)"),").")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u89e6\u63a7\u533a\u57df\u70b9\u51fb"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps to button A, which then maps to ",(0,r.kt)("a",{parentName:"td",href:"/docs/iphone-api/iphone-joystick"},"joystick button 14"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u9640\u87ba\u4eea"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps to ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Input-gyro.html"},"Input.gyro"),". ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Gyroscope-attitude.html"},"Input.gyro.attitude")," derives from the gravity vector, and as such it doesn\u2019t rotate around the axis parallel to the gravity vector. The same applies for ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Gyroscope-rotationRate.html"},"Input.gyro.rotationRate"),".")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u52a0\u901f"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps to ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Input-acceleration.html"},"Input.acceleration"),". ",(0,r.kt)("br",null),"  ",(0,r.kt)("strong",{parentName:"td"},"Note")," : ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/Input-acceleration.html"},"Input.acceleration")," derives from the gyroscope API and might have some instabilities. The tvOS SDK doesn\u2019t have a dedicated accelerometer API.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u6682\u505c/\u64ad\u653e\u6309\u94ae"),(0,r.kt)("td",{parentName:"tr",align:null},"Maps to button X, which then maps to ",(0,r.kt)("a",{parentName:"td",href:"/docs/iphone-api/iphone-joystick"},"joystick button 15"))),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u83dc\u5355\u6309\u94ae"),(0,r.kt)("td",{parentName:"tr",align:null},"A long press calls the tvOS task switcher. You can\u2019t override this behavior.",(0,r.kt)("br",null)," Your app can process short taps one of two ways:",(0,r.kt)("br",null),"  ",(0,r.kt)("strong",{parentName:"td"},"a)"),"  Return to the tvOS system home screen, if ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-allowExitToHome.html"},"UnityEngine.tvOS.Remote.allowExitToHome")," is true.",(0,r.kt)("br",null),"  ",(0,r.kt)("strong",{parentName:"td"},"b)"),"  Let your app respond to taps (which maps to the Pause button/",(0,r.kt)("a",{parentName:"td",href:"/docs/iphone-api/iphone-joystick"},"joystick button 0")," when ",(0,r.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-allowExitToHome.html"},"UnityEngine.tvOS.Remote.allowExitToHome")," is false. This is the default behavior.",(0,r.kt)("br",null)," Your app should switch between  ",(0,r.kt)("strong",{parentName:"td"},"a)"),"  and  ",(0,r.kt)("strong",{parentName:"td"},"b)"),"  based on its current state:",(0,r.kt)("br",null)," - If the user is currently interacting with the top menu, enable behavior  ",(0,r.kt)("strong",{parentName:"td"},"a)")," .",(0,r.kt)("br",null)," - If they\u2019re interacting with the app in real time, enable behavior  ",(0,r.kt)("strong",{parentName:"td"},"b)"),"  and call the in-app pause menu when they press this button.")),(0,r.kt)("tr",{parentName:"tbody"},(0,r.kt)("td",{parentName:"tr",align:null},"\u8f7b\u626b\u81f3\u9065\u63a7\u5668\u7684\u8fb9\u7f18"),(0,r.kt)("td",{parentName:"tr",align:null},"Generates directional pad (D-pad) up/down/left/right button presses.",(0,r.kt)("br",null)," For a list of mappings, see ",(0,r.kt)("a",{parentName:"td",href:"/docs/iphone-api/iphone-joystick"},"iOS Game Controller support"),".")))),(0,r.kt)("p",null,"You can control the Apple TV Remote operational modes via a dedicated API as follows: ","*"," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-allowExitToHome.html"},"UnityEngine.tvOS.Remote.allowExitToHome")," ","*"," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-allowRemoteRotation.html"},"UnityEngine.tvOS.Remote.allowRemoteRotation")," ","*"," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-reportAbsoluteDpadValues.html"},"UnityEngine.tvOS.Remote.reportAbsoluteDpadValues")," ","*"," ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-touchesEnabled.html"},"UnityEngine.tvOS.Remote.touchesEnabled")),(0,r.kt)("p",null," ",(0,r.kt)("strong",{parentName:"p"},"Note")," : When ",(0,r.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/Manual/tvOS.Remote-allowExitToHome.html"},"UnityEngine.tvOS.Remote.allowExitToHome")," is false, the Menu button maps to ",(0,r.kt)("a",{parentName:"p",href:"/docs/iphone-api/iphone-joystick"},"joystick button 0"),". This causes a conflict with the default ",(0,r.kt)("a",{parentName:"p",href:"/docs/input/class-input-manager"},"Input")," window, because it also uses ",(0,r.kt)("a",{parentName:"p",href:"/docs/iphone-api/iphone-joystick"},"joystick button 0")," to map the Submit virtual button. This results in the Menu button triggering actions on UI elements. To fix this issue, remove or modify the Submit virtual button bindings in the ",(0,r.kt)("a",{parentName:"p",href:"/docs/input/class-input-manager"},"Input")," window (menu:  ",(0,r.kt)("strong",{parentName:"p"},"Edit"),"  ",">","  ",(0,r.kt)("strong",{parentName:"p"},"Project Settings")," , then select the  ",(0,r.kt)("strong",{parentName:"p"},"Input"),"  category)."))}m.isMDXComponent=!0}}]);