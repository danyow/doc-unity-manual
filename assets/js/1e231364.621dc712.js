"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[62112],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return p}});var r=n(67294);function a(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function o(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){a(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,a=function(e,t){if(null==e)return{};var n,r,a={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var c=r.createContext({}),s=function(e){var t=r.useContext(c),n=t;return e&&(n="function"==typeof e?e(t):o(o({},t),e)),n},u=function(e){var t=s(e.components);return r.createElement(c.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},h=r.forwardRef((function(e,t){var n=e.components,a=e.mdxType,i=e.originalType,c=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),h=s(n),p=a,f=h["".concat(c,".").concat(p)]||h[p]||d[p]||i;return n?r.createElement(f,o(o({ref:t},u),{},{components:n})):r.createElement(f,o({ref:t},u))}));function p(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var i=n.length,o=new Array(i);o[0]=h;var l={};for(var c in t)hasOwnProperty.call(t,c)&&(l[c]=t[c]);l.originalType=e,l.mdxType="string"==typeof e?e:a,o[1]=l;for(var s=2;s<i;s++)o[s]=n[s];return r.createElement.apply(null,o)}return r.createElement.apply(null,n)}h.displayName="MDXCreateElement"},37431:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return c},default:function(){return p},frontMatter:function(){return l},metadata:function(){return s},toc:function(){return d}});var r=n(87462),a=n(63366),i=(n(67294),n(3905)),o=["components"],l={id:"webgl-caching",title:"Cache behavior in WebGL",slug:"/webgl-develop/webgl-caching"},c="Cache behavior in WebGL",s={unversionedId:"platform-specific/webgl/webgl-develop/webgl-caching",id:"platform-specific/webgl/webgl-develop/webgl-caching",title:"Cache behavior in WebGL",description:"In Unity WebGL, the Cache API lets you store the asset data cached in .data files and AssetBundles within the browser cache. Storage limits for the browser cache such as maximum file size, maximum overall cache size, and eviction criteria are dependent on the browser and platform that you\u2019re using. For more information, see Browser storage limits and eviction criteria - Web API Referenz.",source:"@site/docs/platform-specific/webgl/webgl-develop/webgl-caching.md",sourceDirName:"platform-specific/webgl/webgl-develop",slug:"/webgl-develop/webgl-caching",permalink:"/docs/webgl-develop/webgl-caching",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/platform-specific/webgl/webgl-develop/webgl-caching.md",tags:[],version:"current",frontMatter:{id:"webgl-caching",title:"Cache behavior in WebGL",slug:"/webgl-develop/webgl-caching"},sidebar:"tutorialSidebar",previous:{title:"Developing for WebGL",permalink:"/docs/webgl-develop"},next:{title:"WebGL \u4e2d\u7684\u5149\u6807\u9501\u5b9a\u548c\u5168\u5c4f\u6a21\u5f0f",permalink:"/docs/webgl-develop/webgl-cursorfullscreen"}},u={},d=[{value:"Customizing the WebGL Cache behavior",id:"customizing-the-webgl-cache-behavior",level:2}],h={toc:d};function p(e){var t=e.components,n=(0,a.Z)(e,o);return(0,i.kt)("wrapper",(0,r.Z)({},h,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"cache-behavior-in-webgl"},"Cache behavior in WebGL"),(0,i.kt)("p",null,"In Unity WebGL, the Cache API lets you store the asset data cached in ",(0,i.kt)("inlineCode",{parentName:"p"},".data")," files and AssetBundles within the browser cache. Storage limits for the browser cache such as maximum file size, maximum overall cache size, and eviction criteria are dependent on the browser and platform that you\u2019re using. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"https://developer.mozilla.org/de/docs/Web/API/IndexedDB_API/Browser_storage_limits_and_eviction_criteria"},"Browser storage limits and eviction criteria - Web API Referenz"),"."),(0,i.kt)("h2",{id:"customizing-the-webgl-cache-behavior"},"Customizing the WebGL Cache behavior"),(0,i.kt)("p",null,"By default, the WebGL Cache stores the asset data file ",(0,i.kt)("inlineCode",{parentName:"p"},".data")," and AssetBundle files ",(0,i.kt)("inlineCode",{parentName:"p"},".bundle"),", and revalidates them before loading them from the cache. You can change this behavior by adding a new ",(0,i.kt)("a",{parentName:"p",href:"/docs/webgl-building-distribution/webgl-templates"},"WebGL Template")," that changes the UnityLoader configuration."),(0,i.kt)("p",null,"The following example shows adding a custom cacheControl function to the UnityLoader configuration within the ",(0,i.kt)("inlineCode",{parentName:"p"},"index.html")," file."),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'var config = {\n   // ...\n#if USE_DATA_CACHING\n   cacheControl: function (url) {\n     // Caching enabled for .data and .bundle files.\n     // Revalidate if file is up to date before loading from cache\n     if (url.match(/\\.data/) || url.match(/\\.bundle/)) {\n         return "must-revalidate";\n     }\n\n     // Caching enabled for .mp4 and .custom files\n     // Load file from cache without revalidation.\n     if (url.match(/\\.mp4/) || url.match(/\\.custom/)) {\n         return "immutable";\n     }\n \n     // Disable explicit caching for all other files.\n     // Note: the default browser cache may cache them anyway.\n     return "no-store";\n   },\n#endif\n   // ...\n}\n')),(0,i.kt)("p",null,"The ",(0,i.kt)("inlineCode",{parentName:"p"},"cacheControl")," function takes the url of a request as a parameter and returns one of the following:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"must-revalidate")," - If the function returns ",(0,i.kt)("inlineCode",{parentName:"li"},"must-revalidate"),", the cache is enabled and the file is revalidated before being loaded from the cache."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"immutable")," - If the function returns ",(0,i.kt)("inlineCode",{parentName:"li"},"immutable"),", the cache is enabled and the file is loaded from the cache without revalidation."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"no-store")," - If the function returns ",(0,i.kt)("inlineCode",{parentName:"li"},"no-store")," the cache is disabled.")),(0,i.kt)("p",null,"The browser automatically stores (caches) certain file types such as .html, .js, .css, .json, .jpg, .png, so they don\u2019t need to be explicitly stored in the WebGL Cache. Typical candidates for the WebGL cache include large files and files that use a custom file format."))}p.isMDXComponent=!0}}]);