"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[20794],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return g}});var r=n(67294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function a(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},i=Object.keys(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(r=0;r<i.length;r++)n=i[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var s=r.createContext({}),p=function(e){var t=r.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):a(a({},t),e)),n},u=function(e){var t=p(e.components);return r.createElement(s.Provider,{value:t},e.children)},l={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},d=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,i=e.originalType,s=e.parentName,u=c(e,["components","mdxType","originalType","parentName"]),d=p(n),g=o,m=d["".concat(s,".").concat(g)]||d[g]||l[g]||i;return n?r.createElement(m,a(a({ref:t},u),{},{components:n})):r.createElement(m,a({ref:t},u))}));function g(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var i=n.length,a=new Array(i);a[0]=d;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:o,a[1]=c;for(var p=2;p<i;p++)a[p]=n[p];return r.createElement.apply(null,a)}return r.createElement.apply(null,n)}d.displayName="MDXCreateElement"},86376:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return s},default:function(){return g},frontMatter:function(){return c},metadata:function(){return p},toc:function(){return l}});var r=n(87462),o=n(63366),i=(n(67294),n(3905)),a=["components"],c={id:"Mono",title:"Mono overview",slug:"/scripting-backends/mono"},s="Mono overview",p={unversionedId:"scripting-section/unity-architecture/scripting-backends/Mono",id:"scripting-section/unity-architecture/scripting-backends/Mono",title:"Mono overview",description:"The  Mono scripting backend  compiles code at runtime, with a technique called just-in-time compilation (JIT). Unity uses a fork of the open source Mono project.",source:"@site/docs/scripting-section/unity-architecture/scripting-backends/mono.md",sourceDirName:"scripting-section/unity-architecture/scripting-backends",slug:"/scripting-backends/mono",permalink:"/docs/scripting-backends/mono",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/scripting-section/unity-architecture/scripting-backends/mono.md",tags:[],version:"current",frontMatter:{id:"Mono",title:"Mono overview",slug:"/scripting-backends/mono"},sidebar:"tutorialSidebar",previous:{title:"\u6258\u7ba1\u4ee3\u7801\u5265\u79bb",permalink:"/docs/scripting-backends/managed-code-stripping"},next:{title:"\u811a\u672c\u9650\u5236",permalink:"/docs/scripting-backends/scripting-restrictions"}},u={},l=[{value:"Building a project using Mono",id:"building-a-project-using-mono",level:2}],d={toc:l};function g(e){var t=e.components,n=(0,o.Z)(e,a);return(0,i.kt)("wrapper",(0,r.Z)({},d,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mono-overview"},"Mono overview"),(0,i.kt)("p",null,"The  ",(0,i.kt)("strong",{parentName:"p"},"Mono scripting backend"),"  compiles code at runtime, with a technique called just-in-time compilation (JIT). Unity uses a ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unity-Technologies/mono"},"fork")," of the open source ",(0,i.kt)("a",{parentName:"p",href:"https://www.mono-project.com/"},"Mono project"),"."),(0,i.kt)("p",null,"Some platforms don\u2019t support JIT compilation, so the Mono backend doesn\u2019t work on every platform. Other platforms support JIT and Mono but not ahead-of-time compilation (AOT), and so can\u2019t support the ",(0,i.kt)("a",{parentName:"p",href:"/docs/il2cpp"},"IL2CPP backend"),". When a platform can support both backends, Mono is the default. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/scripting-backends/scripting-restrictions"},"Scripting restrictions"),"."),(0,i.kt)("p",null,"Mono supports the debugging of managed code. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/docs/scripting-setting-up/managed-code-debugging"},"Debugging C# code in Unity"),"."),(0,i.kt)("h2",{id:"building-a-project-using-mono"},"Building a project using Mono"),(0,i.kt)("p",null,"You can change the scripting backend Unity uses to build your application in one of two ways:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},"Through the  ",(0,i.kt)("strong",{parentName:"li"},"Player Settings"),"  menu in the Editor. Perform the following steps to change the scripting backend through the  ",(0,i.kt)("strong",{parentName:"li"},"Player"),"  settings menu:",(0,i.kt)("ol",{parentName:"li"},(0,i.kt)("li",{parentName:"ol"},"Go to  ",(0,i.kt)("strong",{parentName:"li"},"Edit"),"  ",">","  ",(0,i.kt)("strong",{parentName:"li"},"Project Settings")," ."),(0,i.kt)("li",{parentName:"ol"},"Select  ",(0,i.kt)("strong",{parentName:"li"},"Player"),"  to open the ",(0,i.kt)("a",{parentName:"li",href:"/docs/class-player-settings"},"Player")," settings for the current platform in the ",(0,i.kt)("a",{parentName:"li",href:"/docs/using-the-inspector"},"Inspector"),"."),(0,i.kt)("li",{parentName:"ol"},"Under the  ",(0,i.kt)("strong",{parentName:"li"},"Other Settings"),"  sub-menu, navigate to  ",(0,i.kt)("strong",{parentName:"li"},"Configuration"),"  ",">","  ",(0,i.kt)("strong",{parentName:"li"},"Scripting Backend")," ."),(0,i.kt)("li",{parentName:"ol"},"Select  ",(0,i.kt)("strong",{parentName:"li"},"Mono")," ."))),(0,i.kt)("li",{parentName:"ul"},"Through the Editor scripting API. Use the ",(0,i.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/PlayerSettings.SetScriptingBackend.html"},"PlayerSettings.SetScriptingBackend")," property to change the scripting backend that Unity uses.")),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/backend-mono.png",alt:"The Configuration section of the Player settings"})),(0,i.kt)("p",null,"The  ",(0,i.kt)("strong",{parentName:"p"},"Configuration"),"  section of the  ",(0,i.kt)("strong",{parentName:"p"},"Player"),"  settings"),(0,i.kt)("p",null,"To start the build process, open the  ",(0,i.kt)("strong",{parentName:"p"},"Build Settings"),"  window (Menu:  ",(0,i.kt)("strong",{parentName:"p"},"File"),"  ",">","  ",(0,i.kt)("strong",{parentName:"p"},"Build Settings")," ) and select  ",(0,i.kt)("strong",{parentName:"p"},"Build")," ."),(0,i.kt)("p",null,"Both the Mono and IL2CPP scripting backends require a new build for each platform you want to target. For example, to support both the Android and iOS platforms, you need to build your application twice and produce two binary files, one for Android and one for iOS."))}g.isMDXComponent=!0}}]);