"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[43294],{3905:function(e,t,n){n.d(t,{Zo:function(){return c},kt:function(){return p}});var a=n(67294);function l(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function i(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function r(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?i(Object(n),!0).forEach((function(t){l(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):i(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function o(e,t){if(null==e)return{};var n,a,l=function(e,t){if(null==e)return{};var n,a,l={},i=Object.keys(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||(l[n]=e[n]);return l}(e,t);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);for(a=0;a<i.length;a++)n=i[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(l[n]=e[n])}return l}var s=a.createContext({}),u=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):r(r({},t),e)),n},c=function(e){var t=u(e.components);return a.createElement(s.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},m=a.forwardRef((function(e,t){var n=e.components,l=e.mdxType,i=e.originalType,s=e.parentName,c=o(e,["components","mdxType","originalType","parentName"]),m=u(n),p=l,b=m["".concat(s,".").concat(p)]||m[p]||d[p]||i;return n?a.createElement(b,r(r({ref:t},c),{},{components:n})):a.createElement(b,r({ref:t},c))}));function p(e,t){var n=arguments,l=t&&t.mdxType;if("string"==typeof e||l){var i=n.length,r=new Array(i);r[0]=m;var o={};for(var s in t)hasOwnProperty.call(t,s)&&(o[s]=t[s]);o.originalType=e,o.mdxType="string"==typeof e?e:l,r[1]=o;for(var u=2;u<i;u++)r[u]=n[u];return a.createElement.apply(null,r)}return a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},16049:function(e,t,n){n.r(t),n.d(t,{assets:function(){return c},contentTitle:function(){return s},default:function(){return p},frontMatter:function(){return o},metadata:function(){return u},toc:function(){return d}});var a=n(87462),l=n(63366),i=(n(67294),n(3905)),r=["components"],o={id:"UIE-create-tabbed-menu-for-runtime",title:"Create a tabbed menu for runtime",slug:"/uie-examples/uie-create-tabbed-menu-for-runtime"},s="Create a tabbed menu for runtime",u={unversionedId:"uitoolkits/uielements/uie-examples/UIE-create-tabbed-menu-for-runtime",id:"uitoolkits/uielements/uie-examples/UIE-create-tabbed-menu-for-runtime",title:"Create a tabbed menu for runtime",description:"Tabbed menus are common in video games and application UI. You can use UI Toolkit to create a tabbed menu for a custom Editor window or runtime. This example demonstrates how to create a tabbed menu in the sample scene.",source:"@site/docs/uitoolkits/uielements/uie-examples/uie-create-tabbed-menu-for-runtime.md",sourceDirName:"uitoolkits/uielements/uie-examples",slug:"/uie-examples/uie-create-tabbed-menu-for-runtime",permalink:"/doc-unity-manual/docs/uie-examples/uie-create-tabbed-menu-for-runtime",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/uitoolkits/uielements/uie-examples/uie-create-tabbed-menu-for-runtime.md",tags:[],version:"current",frontMatter:{id:"UIE-create-tabbed-menu-for-runtime",title:"Create a tabbed menu for runtime",slug:"/uie-examples/uie-create-tabbed-menu-for-runtime"},sidebar:"tutorialSidebar",previous:{title:"Create a drag-and-drop UI inside a custom Editor window",permalink:"/doc-unity-manual/docs/uie-examples/uie-create-drag-and-drop-ui"},next:{title:"Create a custom Editor window",permalink:"/doc-unity-manual/docs/uie-examples/uie-how-to-create-editor-window"}},c={},d=[{value:"Example overview",id:"example-overview",level:2},{value:"\u5148\u51b3\u6761\u4ef6",id:"\u5148\u51b3\u6761\u4ef6",level:2},{value:"Define the tabbed menu elements",id:"define-the-tabbed-menu-elements",level:2},{value:"Define the tabbed menu styles",id:"define-the-tabbed-menu-styles",level:2},{value:"Define the tabbed menu logic",id:"define-the-tabbed-menu-logic",level:2}],m={toc:d};function p(e){var t=e.components,n=(0,l.Z)(e,r);return(0,i.kt)("wrapper",(0,a.Z)({},m,n,{components:t,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"create-a-tabbed-menu-for-runtime"},"Create a tabbed menu for runtime"),(0,i.kt)("p",null,"Tabbed menus are common in video games and application UI. You can use UI Toolkit to create a tabbed menu for a custom Editor window or runtime. This example demonstrates how to create a tabbed menu in the sample scene."),(0,i.kt)("h2",{id:"example-overview"},"Example overview"),(0,i.kt)("p",null,"This example adds a menu in the sample scene. The menu has three tabs. Each tab presents certain content. When you click a tab, only the content associated with that tab is displayed."),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/TabbedMenu.gif",alt:"A preview of tabbed menu"})),(0,i.kt)("p",null,"A preview of tabbed menu"),(0,i.kt)("p",null,"To create tabbed content, you need to define the menu elements, styles, and logic."),(0,i.kt)("p",null,"You can find the completed files that this example creates in this ",(0,i.kt)("a",{parentName:"p",href:"https://github.com/Unity-Technologies/ui-toolkit-manual-code-examples/tree/master/create-a-tabbed-menu-for-runtime"},"GitHub repository"),"."),(0,i.kt)("h2",{id:"\u5148\u51b3\u6761\u4ef6"},"\u5148\u51b3\u6761\u4ef6"),(0,i.kt)("p",null,"This guide is for developers who are familiar with Unity, UI Toolkit, ",(0,i.kt)("a",{parentName:"p",href:"https://www.w3schools.com/css/css3_flexbox.asp"},"Flexbox"),", and C# scripting."),(0,i.kt)("p",null,"This guide references the following concepts:"),(0,i.kt)("ul",null,(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uie-uxml"},"UXML")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uie-uss"},"USS")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uibuilder"},"UI Builder")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uib-styling-ui/uib-styling-ui-positioning"},"Positioning elements")," with ",(0,i.kt)("a",{parentName:"li",href:"https://www.w3schools.com/css/css3_flexbox.asp"},"Flexbox"))),(0,i.kt)("h2",{id:"define-the-tabbed-menu-elements"},"Define the tabbed menu elements"),(0,i.kt)("p",null,"Create two sections in your menu using the UI Builder, one for tabs and one for the content of tabs. In these sections, create three tab elements and three tab content elements."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a project in Unity Editor using any template.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click  ",(0,i.kt)("strong",{parentName:"p"},"GameObject"),"  ",">","  ",(0,i.kt)("strong",{parentName:"p"},"UI Toolkit"),"  ",">","  ",(0,i.kt)("strong",{parentName:"p"},"UI Document"),"  to add a UI Document in the sample scene.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Create a folder in ",(0,i.kt)("inlineCode",{parentName:"p"},"Assets")," called ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu")," to store all your files.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu")," folder, create a UI Document called ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uxml"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add the UXML to your UI Document by selecting the  ",(0,i.kt)("strong",{parentName:"p"},"UIDocument"),"  in the SampleScene and dragging ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uxml")," to  ",(0,i.kt)("strong",{parentName:"p"},"Source Asset"),"  in the  ",(0,i.kt)("strong",{parentName:"p"},"UI Document"),"  section in the Inspector.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uxml")," using the UI Builder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add two VisualElements called ",(0,i.kt)("inlineCode",{parentName:"p"},"tabs")," and ",(0,i.kt)("inlineCode",{parentName:"p"},"tabContent")," under the root.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Under ",(0,i.kt)("inlineCode",{parentName:"p"},"tabs"),", add three Label controls and give them the following Label texts:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"London")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Paris")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ottawa")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Under ",(0,i.kt)("inlineCode",{parentName:"p"},"tabContent"),", add three Label controls and give them the following Label texts:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"London is the capital city of England")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Paris is the capital of France")),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"Ottawa is the capital of Canada")))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"To associate the tab content with the tab, this example uses the same prefixes but different suffixes for the Label names. Each tab name has the ",(0,i.kt)("inlineCode",{parentName:"p"},"Tab")," suffix and each tab content has the ",(0,i.kt)("inlineCode",{parentName:"p"},"Content")," suffix. Set the tab Label names and content Label names to the following:"))),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},"-   `LondonTab`\n-   `ParisTab`\n-   `OttawaTab`\n-   `LondonContent`\n-   `ParisContent`\n-   `OttawaContent`\n")),(0,i.kt)("p",null,"Your UI Builder Hierarchy should look like the following:"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/TabbedMenu-uxml.png",alt:"UI Builder Hierarchy"})),(0,i.kt)("p",null,"UI Builder Hierarchy"),(0,i.kt)("h2",{id:"define-the-tabbed-menu-styles"},"Define the tabbed menu styles"),(0,i.kt)("p",null,"Define the layout for tabs and tab content using USS. You can style the tabs and the tab content the way you like. This example arranges tabs in a row and on top of the tab content. It adds a background color for the selected tab and hides the un-selected tab content."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu")," folder, create a stylesheet called ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uss"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uss")," and add the following styling rules:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"/* Style for tabs */\n#tabs {\n    flex-basis: 10%;\n    flex-direction: row;\n    background-color: rgb(229, 223, 223);\n    font-size: 12px;\n    -unity-font-style: bold;\n    font-size: 14px;\n}\n\n/* Sets each label in tabs to have the same size. */\n.tab {\n    flex-grow: 1;\n}\n\n/* Adds background color for the selected tab */\n.currentlySelectedTab {\n    background-color: rgb(173, 166, 166);\n}\n\n/* Style for tabContent */\n#tabContent {\n    flex-basis: 90%;\n    background-color: rgb(255, 255, 255);\n    font-size: 20px;\n}\n\n/* Hides the unselected tab content */\n.unselectedContent {\n    display: none;\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uxml")," in UI Builder.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Click  ",(0,i.kt)("strong",{parentName:"p"},"Add Existing USS"),"  and select ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uss"),".")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Apply your styles to the UI controls:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},"Apply ",(0,i.kt)("inlineCode",{parentName:"li"},".tab")," to each label under ",(0,i.kt)("inlineCode",{parentName:"li"},"tabs")),(0,i.kt)("li",{parentName:"ul"},"Apply ",(0,i.kt)("inlineCode",{parentName:"li"},".currentlySelectedTab")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"LondonTab")),(0,i.kt)("li",{parentName:"ul"},"Apply ",(0,i.kt)("inlineCode",{parentName:"li"},".unselectedContent")," to ",(0,i.kt)("inlineCode",{parentName:"li"},"ParisContent")," and ",(0,i.kt)("inlineCode",{parentName:"li"},"OttawaContent"))))),(0,i.kt)("p",null,"The finished ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.uxml")," should look like the following:"),(0,i.kt)("pre",null,(0,i.kt)("code",{parentName:"pre"},'&lt;ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" xsi="http://www.w3.org/2001/XMLSchema-instance" engine="UnityEngine.UIElements" editor="UnityEditor.UIElements" noNamespaceSchemaLocation="../../../UIElementsSchema/UIElements.xsd" editor-extension-mode="False"&gt;\n   /* Your src might look different. If you save your UXML in UI Builder, USS file is referenced by the file location, fileID and guid. */\n   &lt;Style src="TabbedMenu-style.uss" /&gt;\n   &lt;ui:VisualElement name="tabs"&gt;\n      &lt;ui:Label name="LondonTab" text="London" class="tab currentlySelectedTab" /&gt;\n      &lt;ui:Label name="ParisTab" text="Paris" class="tab" /&gt;\n      &lt;ui:Label name="OttawaTab" text="Ottawa" class="tab" /&gt;\n   &lt;/ui:VisualElement&gt;\n   &lt;ui:VisualElement name="tabContent"&gt;\n      &lt;ui:Label text="London is the capital city of England" name="LondonContent" /&gt;\n      &lt;ui:Label text="Paris is the capital of France" name="ParisContent" class="unselectedContent" /&gt;\n      &lt;ui:Label text="Ottawa is the capital of Canada" name="OttawaContent" class="unselectedContent" /&gt;\n   &lt;/ui:VisualElement&gt;\n&lt;/ui:UXML&gt;\n')),(0,i.kt)("h2",{id:"define-the-tabbed-menu-logic"},"Define the tabbed menu logic"),(0,i.kt)("p",null,"Create the C# scripts that change the displayed tab content. When a user clicks a tab, the tab\u2019s content displays and the current content hides."),(0,i.kt)("ol",null,(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"In the ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu")," folder, create the following two C# script files:"),(0,i.kt)("ul",{parentName:"li"},(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TabbedMenu.cs"),": Attaches the tabbed menu logic to the game."),(0,i.kt)("li",{parentName:"ul"},(0,i.kt)("inlineCode",{parentName:"li"},"TabbedMenuController.cs"),": Defines the tab selection logic."))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Add ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.cs")," as a component to the UI Document by selecting the  ",(0,i.kt)("strong",{parentName:"p"},"UIDocument"),"  in the SampleScene and dragging ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.cs")," to  ",(0,i.kt)("strong",{parentName:"p"},"Add Component"),"  button in the Inspector.")),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenu.cs")," and replace with the following code:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},"using UnityEngine;\nusing UnityEngine.UIElements;\n\n//Inherits from class `MonoBehaviour`. This makes it attachable to a game object as a component.\npublic class TabbedMenu : MonoBehaviour\n{\n    private TabbedMenuController controller;\n\n    private void OnEnable()\n    {\n        UIDocument menu = GetComponent&lt;UIDocument&gt;();\n        VisualElement root = menu.rootVisualElement;\n\n        controller = new(root);\n\n        controller.RegisterTabCallbacks();\n    }\n}\n"))),(0,i.kt)("li",{parentName:"ol"},(0,i.kt)("p",{parentName:"li"},"Open ",(0,i.kt)("inlineCode",{parentName:"p"},"TabbedMenuController.cs")," and replace with the following code:"),(0,i.kt)("pre",{parentName:"li"},(0,i.kt)("code",{parentName:"pre"},'using UnityEngine.UIElements;\n\npublic class TabbedMenuController\n{\n    /* Define member variables*/\n    private const string tabClassName = "tab";\n    private const string currentlySelectedTabClassName = "currentlySelectedTab";\n    private const string unselectedContentClassName = "unselectedContent";\n    // Tab and tab content have the same prefix but different suffix\n    // Define the suffix of the tab name\n    private const string tabNameSuffix = "Tab";\n    // Define the suffix of the tab content name\n    private const string contentNameSuffix = "Content";\n\n    private readonly VisualElement root;\n\n    public TabbedMenuController(VisualElement root)\n    {\n        this.root = root;\n    }\n\n    public void RegisterTabCallbacks()\n    {\n        UQueryBuilder&lt;Label&gt; tabs = GetAllTabs();\n        tabs.ForEach((Label tab) =&gt; {\n            tab.RegisterCallback&lt;ClickEvent&gt;(TabOnClick);\n        });\n    }\n\n    /* Method for the tab on-click event: \n\n       - If it is not selected, find other tabs that are selected, unselect them \n       - Then select the tab that was clicked on\n    */\n    private void TabOnClick(ClickEvent evt)\n    {\n        Label clickedTab = evt.currentTarget as Label;\n        if (!TabIsCurrentlySelected(clickedTab))\n        {\n            GetAllTabs().Where(\n                (tab) =&gt; tab != clickedTab && TabIsCurrentlySelected(tab)\n            ).ForEach(UnselectTab);\n            SelectTab(clickedTab);\n        }\n    }\n    //Method that returns a Boolean indicating whether a tab is currently selected\n    private static bool TabIsCurrentlySelected(Label tab)\n    {\n        return tab.ClassListContains(currentlySelectedTabClassName);\n    }\n\n    private UQueryBuilder&lt;Label&gt; GetAllTabs()\n    {\n        return root.Query&lt;Label&gt;(className: tabClassName);\n    }\n\n    /* Method for the selected tab: \n       -  Takes a tab as a parameter and adds the currentlySelectedTab class\n       -  Then finds the tab content and removes the unselectedContent class */\n    private void SelectTab(Label tab)\n    {\n        tab.AddToClassList(currentlySelectedTabClassName);\n        VisualElement content = FindContent(tab);\n        content.RemoveFromClassList(unselectedContentClassName);\n    }\n\n    /* Method for the unselected tab: \n       -  Takes a tab as a parameter and removes the currentlySelectedTab class\n       -  Then finds the tab content and adds the unselectedContent class */\n    private void UnselectTab(Label tab)\n    {\n        tab.RemoveFromClassList(currentlySelectedTabClassName);\n        VisualElement content = FindContent(tab);\n        content.AddToClassList(unselectedContentClassName);\n    }\n\n    // Method to generate the associated tab content name by for the given tab name\n    private static string GenerateContentName(Label tab) =&gt;\n        tab.name.Replace(tabNameSuffix, contentNameSuffix);\n\n    // Method that takes a tab as a parameter and returns the associated content element\n    private VisualElement FindContent(Label tab)\n    {\n        return root.Q(GenerateContentName(tab));\n    }\n}\n')))),(0,i.kt)("p",null,"Go back to Unity and enter Play mode. You should see the content change when you click a new tab."),(0,i.kt)("hr",null),(0,i.kt)("p",null,"Tabbed menu example added in Unity ",(0,i.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/2021.2/Documentation/Manual/30_search.html?q=newin20212"},"2021.2")," NewIn20212"))}p.isMDXComponent=!0}}]);