"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[17085],{3905:function(t,e,r){r.d(e,{Zo:function(){return u},kt:function(){return d}});var n=r(67294);function a(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var n=Object.getOwnPropertySymbols(t);e&&(n=n.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,n)}return r}function p(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){a(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function o(t,e){if(null==t)return{};var r,n,a=function(t,e){if(null==t)return{};var r,n,a={},i=Object.keys(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||(a[r]=t[r]);return a}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(n=0;n<i.length;n++)r=i[n],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(a[r]=t[r])}return a}var s=n.createContext({}),m=function(t){var e=n.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):p(p({},e),t)),r},u=function(t){var e=m(t.components);return n.createElement(s.Provider,{value:e},t.children)},l={inlineCode:"code",wrapper:function(t){var e=t.children;return n.createElement(n.Fragment,{},e)}},c=n.forwardRef((function(t,e){var r=t.components,a=t.mdxType,i=t.originalType,s=t.parentName,u=o(t,["components","mdxType","originalType","parentName"]),c=m(r),d=a,f=c["".concat(s,".").concat(d)]||c[d]||l[d]||i;return r?n.createElement(f,p(p({ref:e},u),{},{components:r})):n.createElement(f,p({ref:e},u))}));function d(t,e){var r=arguments,a=e&&e.mdxType;if("string"==typeof t||a){var i=r.length,p=new Array(i);p[0]=c;var o={};for(var s in e)hasOwnProperty.call(e,s)&&(o[s]=e[s]);o.originalType=t,o.mdxType="string"==typeof t?t:a,p[1]=o;for(var m=2;m<i;m++)p[m]=r[m];return n.createElement.apply(null,p)}return n.createElement.apply(null,r)}c.displayName="MDXCreateElement"},75857:function(t,e,r){r.r(e),r.d(e,{assets:function(){return u},contentTitle:function(){return s},default:function(){return d},frontMatter:function(){return o},metadata:function(){return m},toc:function(){return l}});var n=r(87462),a=r(63366),i=(r(67294),r(3905)),p=["components"],o={id:"texture-mipmaps",title:"Mipmaps",slug:"/texture-mipmaps"},s="Mipmaps",m={unversionedId:"graphics/textures/texture-mipmaps/texture-mipmaps",id:"graphics/textures/texture-mipmaps/texture-mipmaps",title:"Mipmaps",description:"A mip or mip level is a version of a texture with a specific resolution. Mips exist in sets called mipmaps. Mipmaps can speed up rendering operations and reduce rendering artifacts in situations where the GPU renders a texture at less than its full resolution.",source:"@site/docs/graphics/textures/texture-mipmaps/texture-mipmaps.md",sourceDirName:"graphics/textures/texture-mipmaps",slug:"/texture-mipmaps",permalink:"/docs/texture-mipmaps",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/graphics/textures/texture-mipmaps/texture-mipmaps.md",tags:[],version:"current",frontMatter:{id:"texture-mipmaps",title:"Mipmaps",slug:"/texture-mipmaps"},sidebar:"tutorialSidebar",previous:{title:"Recommended, default, and supported texture formats, by platform",permalink:"/docs/texture-compression-formats/class-texture-importer-override"},next:{title:"Streaming Controller component",permalink:"/docs/texture-mipmaps/class-streaming-controller"}},u={},l=[],c={toc:l};function d(t){var e=t.components,r=(0,a.Z)(t,p);return(0,i.kt)("wrapper",(0,n.Z)({},c,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"mipmaps"},"Mipmaps"),(0,i.kt)("p",null,"A mip or mip level is a version of a texture with a specific resolution. Mips exist in sets called mipmaps. Mipmaps can speed up rendering operations and reduce rendering artifacts in situations where the GPU renders a texture at less than its full resolution."),(0,i.kt)("p",null,"\u672c\u8282\u5305\u542b\u4ee5\u4e0b\u4fe1\u606f\uff1a"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"\u9875\u9762")),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"\u63cf\u8ff0")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/texture-mipmaps/texture-mipmaps-introduction"},"Mipmaps introduction")),(0,i.kt)("td",{parentName:"tr",align:null},"An introduction to mips and mipmaps in Unity.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/texture-mipmaps/texture-streaming"},"The Mipmpap Streaming system")),(0,i.kt)("td",{parentName:"tr",align:null},"Information about a feature that lets you control how Unity loads mips.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/texture-mipmaps/texture-streaming-api"},"The Mipmpap Streaming system API")),(0,i.kt)("td",{parentName:"tr",align:null},"How to use C# scripts to extend the basic functionality of the Mipmap Streaming system.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("a",{parentName:"td",href:"/docs/texture-mipmaps/class-streaming-controller"},"Streaming Controller component")),(0,i.kt)("td",{parentName:"tr",align:null},"Information about this component, which is part of the Mipmap Streaming system.")))))}d.isMDXComponent=!0}}]);