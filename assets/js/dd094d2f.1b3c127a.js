"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[99792],{3905:function(e,t,n){n.d(t,{Zo:function(){return p},kt:function(){return m}});var a=n(67294);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,a,r=function(e,t){if(null==e)return{};var n,a,r={},o=Object.keys(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||(r[n]=e[n]);return r}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(a=0;a<o.length;a++)n=o[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(r[n]=e[n])}return r}var s=a.createContext({}),d=function(e){var t=a.useContext(s),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},p=function(e){var t=d(e.components);return a.createElement(s.Provider,{value:t},e.children)},u={inlineCode:"code",wrapper:function(e){var t=e.children;return a.createElement(a.Fragment,{},t)}},c=a.forwardRef((function(e,t){var n=e.components,r=e.mdxType,o=e.originalType,s=e.parentName,p=l(e,["components","mdxType","originalType","parentName"]),c=d(n),m=r,g=c["".concat(s,".").concat(m)]||c[m]||u[m]||o;return n?a.createElement(g,i(i({ref:t},p),{},{components:n})):a.createElement(g,i({ref:t},p))}));function m(e,t){var n=arguments,r=t&&t.mdxType;if("string"==typeof e||r){var o=n.length,i=new Array(o);i[0]=c;var l={};for(var s in t)hasOwnProperty.call(t,s)&&(l[s]=t[s]);l.originalType=e,l.mdxType="string"==typeof e?e:r,i[1]=l;for(var d=2;d<o;d++)i[d]=n[d];return a.createElement.apply(null,i)}return a.createElement.apply(null,n)}c.displayName="MDXCreateElement"},34525:function(e,t,n){n.r(t),n.d(t,{assets:function(){return p},contentTitle:function(){return s},default:function(){return m},frontMatter:function(){return l},metadata:function(){return d},toc:function(){return u}});var a=n(87462),r=n(63366),o=(n(67294),n(3905)),i=["components"],l={id:"UIE-create-drag-and-drop-ui",title:"Create a drag-and-drop UI inside a custom Editor window",slug:"/uie-examples/uie-create-drag-and-drop-ui"},s="Create a drag-and-drop UI inside a custom Editor window",d={unversionedId:"uitoolkits/uielements/uie-examples/UIE-create-drag-and-drop-ui",id:"uitoolkits/uielements/uie-examples/UIE-create-drag-and-drop-ui",title:"Create a drag-and-drop UI inside a custom Editor window",description:"Drag-and-drop is a common feature in UI design. You can use UI Toolkit to create a drag-and-drop UI inside a custom Editor window or inside an application built by Unity. This example demonstrates how to create a drag-and-drop UI inside a custom Editor window.",source:"@site/docs/uitoolkits/uielements/uie-examples/uie-create-drag-and-drop-ui.md",sourceDirName:"uitoolkits/uielements/uie-examples",slug:"/uie-examples/uie-create-drag-and-drop-ui",permalink:"/doc-unity-manual/docs/uie-examples/uie-create-drag-and-drop-ui",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/uitoolkits/uielements/uie-examples/uie-create-drag-and-drop-ui.md",tags:[],version:"current",frontMatter:{id:"UIE-create-drag-and-drop-ui",title:"Create a drag-and-drop UI inside a custom Editor window",slug:"/uie-examples/uie-create-drag-and-drop-ui"},sidebar:"tutorialSidebar",previous:{title:"Examples",permalink:"/doc-unity-manual/docs/uie-examples"},next:{title:"Create a tabbed menu for runtime",permalink:"/doc-unity-manual/docs/uie-examples/uie-create-tabbed-menu-for-runtime"}},p={},u=[{value:"Example overview",id:"example-overview",level:2},{value:"\u5148\u51b3\u6761\u4ef6",id:"\u5148\u51b3\u6761\u4ef6",level:2},{value:"Create a custom Editor window",id:"create-a-custom-editor-window",level:2},{value:"Create slots and objects",id:"create-slots-and-objects",level:2},{value:"Define the drag-and-drop logic",id:"define-the-drag-and-drop-logic",level:2},{value:"Instantiate the drag-and-drop behavior",id:"instantiate-the-drag-and-drop-behavior",level:2}],c={toc:u};function m(e){var t=e.components,n=(0,r.Z)(e,i);return(0,o.kt)("wrapper",(0,a.Z)({},c,n,{components:t,mdxType:"MDXLayout"}),(0,o.kt)("h1",{id:"create-a-drag-and-drop-ui-inside-a-custom-editor-window"},"Create a drag-and-drop UI inside a custom Editor window"),(0,o.kt)("p",null,"Drag-and-drop is a common feature in UI design. You can use UI Toolkit to create a drag-and-drop UI inside a custom Editor window or inside an application built by Unity. This example demonstrates how to create a drag-and-drop UI inside a custom Editor window."),(0,o.kt)("h2",{id:"example-overview"},"Example overview"),(0,o.kt)("p",null,"The example adds several slots and one object in a custom Editor window. You can drag the object into any slot, as shown below:"),(0,o.kt)("p",null,(0,o.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/UIBuilder/drag-drop.gif",alt:"A preview of a drag-and-drop UI"})),(0,o.kt)("p",null,"A preview of a drag-and-drop UI"),(0,o.kt)("p",null,"You can find the completed files that this example creates in this ",(0,o.kt)("a",{parentName:"p",href:"https://github.com/Unity-Technologies/ui-toolkit-manual-code-examples/tree/master/create-a-drag-and-drop-window-inside-a-custom-editor-window"},"GitHub repository"),"."),(0,o.kt)("h2",{id:"\u5148\u51b3\u6761\u4ef6"},"\u5148\u51b3\u6761\u4ef6"),(0,o.kt)("p",null,"This is an advanced example for developers familiar with Unity Editor, UI Toolkit, and C# scripting. It\u2019s recommended that you have a basic understanding of the following concepts:"),(0,o.kt)("ul",null,(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uibuilder"},"UI Builder")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uielements/uie-visual-tree"},"Visual Tree")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uie-uxml"},"UXML")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uie-uss"},"USS")),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("a",{parentName:"li",href:"/doc-unity-manual/docs/uie-events-reference/uie-pointer-events"},"\u6307\u9488\u4e8b\u4ef6"))),(0,o.kt)("h2",{id:"create-a-custom-editor-window"},"Create a custom Editor window"),(0,o.kt)("p",null,"To start, create a custom Editor window to hold your drag-and-drop UI."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},"Create a project in Unity using any template."),(0,o.kt)("li",{parentName:"ol"},"Create a folder in ",(0,o.kt)("inlineCode",{parentName:"li"},"Assets")," called ",(0,o.kt)("inlineCode",{parentName:"li"},"DragAndDrop")," to store all your files."),(0,o.kt)("li",{parentName:"ol"},"In the ",(0,o.kt)("inlineCode",{parentName:"li"},"DragAndDrop")," folder, right-click and select  ",(0,o.kt)("strong",{parentName:"li"},"Create"),"  ",">","  ",(0,o.kt)("strong",{parentName:"li"},"UI Toolkit"),"  ",">","  ",(0,o.kt)("strong",{parentName:"li"},"Editor Window")," ."),(0,o.kt)("li",{parentName:"ol"},"In  ",(0,o.kt)("strong",{parentName:"li"},"UI Toolkit Editor Window Creator")," , enter ",(0,o.kt)("inlineCode",{parentName:"li"},"DragAndDropWindow"),"."),(0,o.kt)("li",{parentName:"ol"},"Click  ",(0,o.kt)("strong",{parentName:"li"},"Confirm")," . This automatically creates the C# script, UXML, and USS files for your custom window."),(0,o.kt)("li",{parentName:"ol"},"Open ",(0,o.kt)("inlineCode",{parentName:"li"},"DragAndDropWindow.cs")," and change the menu name and window title to ",(0,o.kt)("inlineCode",{parentName:"li"},"Drag And Drop"),", and remove the code for the default labels, to make the UI more user friendly.")),(0,o.kt)("p",null,"Your finished ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.cs")," should look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'using UnityEditor;\nusing UnityEngine;\nusing UnityEngine.UIElements;\nusing UnityEditor.UIElements;\n\npublic class DragAndDropWindow : EditorWindow\n{\n    [MenuItem("Window/UI Toolkit/Drag And Drop")]\n    public static void ShowExample()\n    {\n        DragAndDropWindow wnd = GetWindow&lt;DragAndDropWindow&gt;();\n        wnd.titleContent = new GUIContent("Drag And Drop");\n    }\n\n    public void CreateGUI()\n    {\n        // Each editor window contains a root VisualElement object\n        VisualElement root = rootVisualElement;\n\n          // Import UXML\n        var visualTree = AssetDatabase.LoadAssetAtPath&lt;VisualTreeAsset&gt;("Assets/Drag and Drop/DragAndDropWindow.uxml");\n        VisualElement labelFromUXML = visualTree.Instantiate();\n        root.Add(labelFromUXML);\n\n        // A stylesheet can be added to a VisualElement.\n        // The style will be applied to the VisualElement and all of its children.\n        var styleSheet = AssetDatabase.LoadAssetAtPath&lt;StyleSheet&gt;("Assets/Drag and Drop/DragAndDropWindow.uss");\n    \n    }\n}\n')),(0,o.kt)("h2",{id:"create-slots-and-objects"},"Create slots and objects"),(0,o.kt)("p",null,"Next, add UI controls to your custom window."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDrop")," folder, double-click ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.uxml")," to open the UI Builder.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In  ",(0,o.kt)("strong",{parentName:"p"},"StyleSheet")," , click  ",(0,o.kt)("strong",{parentName:"p"},"Add Existing USS"),"  and select ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.uss"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add the following ",(0,o.kt)("inlineCode",{parentName:"p"},"VisualElement")," UI controls:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"One named ",(0,o.kt)("inlineCode",{parentName:"li"},"slots")," with two children named ",(0,o.kt)("inlineCode",{parentName:"li"},"slot_row1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"slot_row2"),". Each row should have two children named ",(0,o.kt)("inlineCode",{parentName:"li"},"slot1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"slot2"),"."),(0,o.kt)("li",{parentName:"ul"},"One named ",(0,o.kt)("inlineCode",{parentName:"li"},"object")," at the same level as ",(0,o.kt)("inlineCode",{parentName:"li"},"slots"),". ",(0,o.kt)("inlineCode",{parentName:"li"},"object")," must come after ",(0,o.kt)("inlineCode",{parentName:"li"},"slots")," in the  ",(0,o.kt)("strong",{parentName:"li"},"Hierarchy")," ."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Style the UI controls as the following:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"For ",(0,o.kt)("inlineCode",{parentName:"li"},"slot1")," and ",(0,o.kt)("inlineCode",{parentName:"li"},"slot2"),", style them as 80px X 80px squares with white background color and rounded corners. Line up the slots as two rows with two slots in each row."),(0,o.kt)("li",{parentName:"ul"},"For ",(0,o.kt)("inlineCode",{parentName:"li"},"object"),", style it as a 50px X 50px round spot with a black background color.")))),(0,o.kt)("p",null,"For instructions on how to add and style UI controls, see ",(0,o.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/uibuilder"},"UI Builder"),"."),(0,o.kt)("p",null,"Your finished ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.uxml")," should look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'&lt;ui:UXML xmlns:ui="UnityEngine.UIElements" xmlns:uie="UnityEditor.UIElements" xsi="http://www.w3.org/2001/XMLSchema-instance" engine="UnityEngine.UIElements" editor="UnityEditor.UIElements" noNamespaceSchemaLocation="../../../UIElementsSchema/UIElements.xsd" editor-extension-mode="False"&gt;\n    &lt;Style src="project://database/Assets/DragAndDrop/DragAndDropWindow.uss?fileID=7433441132597879392&guid=3d86870c8637c4a3c979a8b4fe0cba4c&type=3#DragAndDrop" /&gt;\n    &lt;ui:VisualElement name="slots"&gt;\n        &lt;ui:VisualElement name="slot_row1" class="slot_row"&gt;\n            &lt;ui:VisualElement name="slot1" class="slot" /&gt;\n            &lt;ui:VisualElement name="slot2" class="slot" /&gt;\n        &lt;/ui:VisualElement&gt;\n        &lt;ui:VisualElement name="slot_row2" class="slot_row"&gt;\n            &lt;ui:VisualElement name="slot1" class="slot" /&gt;\n            &lt;ui:VisualElement name="slot2" class="slot" /&gt;\n        &lt;/ui:VisualElement&gt;\n    &lt;/ui:VisualElement&gt;\n    &lt;ui:VisualElement name="object" class="object" /&gt;\n&lt;/ui:UXML&gt;\n')),(0,o.kt)("p",null,"Your finished ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.uss")," should look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},".slot {\nwidth: 80px;\nheight: 80px;\nmargin: 5px;\nbackground-color: rgb(255, 255, 255);\nborder-top-radius: 10px;\n}\n\n.slot_row {\n    flex-direction: row;\n}\n\n.object {\n    width: 50px;\n    height: 50px;\n    position: absolute;\n    left: 10px;\n    top: 10px;\n    border-radius: 30px;\n    background-color: rgb(0, 0, 0);\n}\n")),(0,o.kt)("h2",{id:"define-the-drag-and-drop-logic"},"Define the drag-and-drop logic"),(0,o.kt)("p",null,"To define the drag-and-drop behavior, extend the ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.PointerManipulator.html"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerManipulator"))," class and define the logic."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In the ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDrop")," folder, create another C# file called ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropManipulator.cs"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Open ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropManipulator.cs"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Add the ",(0,o.kt)("inlineCode",{parentName:"p"},"using UnityEngine.UIElements;")," declaration.")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Make the ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropManipulator")," class extend ",(0,o.kt)("inlineCode",{parentName:"p"},"PointerManipulator")," rather than ",(0,o.kt)("inlineCode",{parentName:"p"},"MonoBehaviour"),", and do the following:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},"Implement inherited method ",(0,o.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.Manipulator.RegisterCallbacksOnTarget.html"},(0,o.kt)("inlineCode",{parentName:"a"},"RegisterCallbacksOnTarget()"))," to register all necessary callbacks"),(0,o.kt)("li",{parentName:"ul"},"Implement ",(0,o.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.Manipulator.UnregisterCallbacksFromTarget.html"},(0,o.kt)("inlineCode",{parentName:"a"},"UnregisterCallbacksOnTarget()"))," to un-register those callbacks"),(0,o.kt)("li",{parentName:"ul"},"Write a constructor to set ",(0,o.kt)("a",{parentName:"li",href:"https://docs.unity3d.com/cn/2022.1/Manual/UIElements.Manipulator-target.html"},(0,o.kt)("inlineCode",{parentName:"a"},"target"))," and store a reference to the root of the visual tree"))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Write four methods that act as callbacks for ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.PointerDownEvent.html"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerDownEvent")),"s, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.PointerMoveEvent.html"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerMoveEvent")),"s, ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.PointerUpEvent.html"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerUpEvent")),"s, and ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/UIElements.PointerCaptureOutEvent.html"},(0,o.kt)("inlineCode",{parentName:"a"},"PointerCaptureOutEvent")),"s:"),(0,o.kt)("ul",{parentName:"li"},(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PointerDownHandler()"),": Stores the starting position of ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," and the pointer, makes ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," capture the pointer, and denotes that a drag is now in progress."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PointerMoveHandler()"),": Checks whether a drag is in progress and whether ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," has captured the pointer. If both are true, calculates a new position for ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," within the bounds of the window."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PointerUpHandler()"),": Checks whether a drag is in progress and whether ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," has captured the pointer. If both are true, makes ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," release the pointer."),(0,o.kt)("li",{parentName:"ul"},(0,o.kt)("inlineCode",{parentName:"li"},"PointerCaptureOutHandler()"),": Checks whether a drag is in progress. If true, queries the root of the visual tree to find all slots, decides which slot is the closest one that overlaps ",(0,o.kt)("inlineCode",{parentName:"li"},"target"),", and sets the position of ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," so that it rests on top of that slot. Sets the position of ",(0,o.kt)("inlineCode",{parentName:"li"},"target")," back to its original position if there is no overlapping slot."))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In ",(0,o.kt)("inlineCode",{parentName:"p"},"RegisterCallbacksOnTarget()"),", register these four callbacks on ",(0,o.kt)("inlineCode",{parentName:"p"},"target"),".")),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In ",(0,o.kt)("inlineCode",{parentName:"p"},"UnregisterCallbacksOnTarget()"),", un-register these four callbacks from ",(0,o.kt)("inlineCode",{parentName:"p"},"target"),"."))),(0,o.kt)("p",null,"Your finished ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropManipulator.cs")," should look like the following:"),(0,o.kt)("pre",null,(0,o.kt)("code",{parentName:"pre"},'using System.Collections;\nusing System.Collections.Generic;\nusing UnityEngine;\nusing UnityEngine.UIElements;\n\npublic class DragAndDropManipulator : PointerManipulator\n{\n    public DragAndDropManipulator(VisualElement target)\n    {\n        this.target = target;\n        root = target.parent;\n    }\n\n    protected override void RegisterCallbacksOnTarget()\n    {\n        target.RegisterCallback&lt;PointerDownEvent&gt;(PointerDownHandler);\n        target.RegisterCallback&lt;PointerMoveEvent&gt;(PointerMoveHandler);\n        target.RegisterCallback&lt;PointerUpEvent&gt;(PointerUpHandler);\n        target.RegisterCallback&lt;PointerCaptureOutEvent&gt;(PointerCaptureOutHandler);\n    }\n\n    protected override void UnregisterCallbacksFromTarget()\n    {\n        target.UnregisterCallback&lt;PointerDownEvent&gt;(PointerDownHandler);\n        target.UnregisterCallback&lt;PointerMoveEvent&gt;(PointerMoveHandler);\n        target.UnregisterCallback&lt;PointerUpEvent&gt;(PointerUpHandler);\n        target.UnregisterCallback&lt;PointerCaptureOutEvent&gt;(PointerCaptureOutHandler);\n    }\n\n    private Vector2 targetStartPosition { get; set; }\n\n    private Vector3 pointerStartPosition { get; set; }\n\n    private bool enabled { get; set; }\n\n    private VisualElement root { get; }\n\n    private void PointerDownHandler(PointerDownEvent evt)\n    {\n        targetStartPosition = target.transform.position;\n        pointerStartPosition = evt.position;\n        target.CapturePointer(evt.pointerId);\n        enabled = true;\n    }\n\n    private void PointerMoveHandler(PointerMoveEvent evt)\n    {\n        if (enabled && target.HasPointerCapture(evt.pointerId))\n        {\n            Vector3 pointerDelta = evt.position - pointerStartPosition;\n\n            target.transform.position = new Vector2(\n                Mathf.Clamp(targetStartPosition.x + pointerDelta.x, 0, target.panel.visualTree.worldBound.width),\n                Mathf.Clamp(targetStartPosition.y + pointerDelta.y, 0, target.panel.visualTree.worldBound.height));\n        }\n    }\n\n    private void PointerUpHandler(PointerUpEvent evt)\n    {\n        if (enabled && target.HasPointerCapture(evt.pointerId))\n        {\n            target.ReleasePointer(evt.pointerId);\n        }\n    }\n\n    private void PointerCaptureOutHandler(PointerCaptureOutEvent evt)\n    {\n        if (enabled)\n        {\n            VisualElement slotsContainer = root.Q&lt;VisualElement&gt;("slots");\n            UQueryBuilder&lt;VisualElement&gt; allSlots =\n                slotsContainer.Query&lt;VisualElement&gt;(className: "slot");\n            UQueryBuilder&lt;VisualElement&gt; overlappingSlots =\n                allSlots.Where(OverlapsTarget);\n            VisualElement closestOverlappingSlot =\n                FindClosestSlot(overlappingSlots);\n            Vector3 closestPos = Vector3.zero;\n            if (closestOverlappingSlot != null)\n            {\n                closestPos = RootSpaceOfSlot(closestOverlappingSlot);\n                closestPos = new Vector2(closestPos.x - 5, closestPos.y - 5);\n            }\n            target.transform.position =\n                closestOverlappingSlot != null ?\n                closestPos :\n                targetStartPosition;\n\n            enabled = false;\n        }\n    }\n\n    private bool OverlapsTarget(VisualElement slot)\n    {\n        return target.worldBound.Overlaps(slot.worldBound);\n    }\n\n    private VisualElement FindClosestSlot(UQueryBuilder&lt;VisualElement&gt; slots)\n    {\n        List&lt;VisualElement&gt; slotsList = slots.ToList();\n        float bestDistanceSq = float.MaxValue;\n        VisualElement closest = null;\n        foreach (VisualElement slot in slotsList)\n        {\n            Vector3 displacement =\n                RootSpaceOfSlot(slot) - target.transform.position;\n            float distanceSq = displacement.sqrMagnitude;\n            if (distanceSq &lt; bestDistanceSq)\n            {\n                bestDistanceSq = distanceSq;\n                closest = slot;\n            }\n        }\n        return closest;\n    }\n\n    private Vector3 RootSpaceOfSlot(VisualElement slot)\n    {\n        Vector2 slotWorldSpace = slot.parent.LocalToWorld(slot.layout.position);\n        return root.WorldToLocal(slotWorldSpace);\n    }\n}\n')),(0,o.kt)("h2",{id:"instantiate-the-drag-and-drop-behavior"},"Instantiate the drag-and-drop behavior"),(0,o.kt)("p",null,"To enable drag-and-drop in the custom window, instantiate it when the window opens."),(0,o.kt)("ol",null,(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"In ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropWindow.cs"),", add the following to the ",(0,o.kt)("inlineCode",{parentName:"p"},"CreateGUI()")," method to instantiate the ",(0,o.kt)("inlineCode",{parentName:"p"},"DragAndDropManipulator")," class:"),(0,o.kt)("pre",{parentName:"li"},(0,o.kt)("code",{parentName:"pre"},'DragAndDropManipulator manipulator =\n    new(rootVisualElement.Q&lt;VisualElement&gt;("object"));\n'))),(0,o.kt)("li",{parentName:"ol"},(0,o.kt)("p",{parentName:"li"},"Go to the Unity menu bar, click  ",(0,o.kt)("strong",{parentName:"p"},"Window"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"UI Toolkit"),"  ",">","  ",(0,o.kt)("strong",{parentName:"p"},"Drag And Drop")," . In the opened custom window, you can drag the object into any slot."))),(0,o.kt)("hr",null),(0,o.kt)("p",null,"Drag-and-drop UI example added in Unity ",(0,o.kt)("a",{parentName:"p",href:"https://docs.unity3d.com/2021.2/Documentation/Manual/30_search.html?q=newin20212"},"2021.2")," NewIn20212"))}m.isMDXComponent=!0}}]);