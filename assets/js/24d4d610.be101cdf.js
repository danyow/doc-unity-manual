"use strict";(self.webpackChunkwebsite=self.webpackChunkwebsite||[]).push([[67652],{3905:function(t,e,r){r.d(e,{Zo:function(){return m},kt:function(){return c}});var a=r(67294);function n(t,e,r){return e in t?Object.defineProperty(t,e,{value:r,enumerable:!0,configurable:!0,writable:!0}):t[e]=r,t}function i(t,e){var r=Object.keys(t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(t);e&&(a=a.filter((function(e){return Object.getOwnPropertyDescriptor(t,e).enumerable}))),r.push.apply(r,a)}return r}function o(t){for(var e=1;e<arguments.length;e++){var r=null!=arguments[e]?arguments[e]:{};e%2?i(Object(r),!0).forEach((function(e){n(t,e,r[e])})):Object.getOwnPropertyDescriptors?Object.defineProperties(t,Object.getOwnPropertyDescriptors(r)):i(Object(r)).forEach((function(e){Object.defineProperty(t,e,Object.getOwnPropertyDescriptor(r,e))}))}return t}function l(t,e){if(null==t)return{};var r,a,n=function(t,e){if(null==t)return{};var r,a,n={},i=Object.keys(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||(n[r]=t[r]);return n}(t,e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(t);for(a=0;a<i.length;a++)r=i[a],e.indexOf(r)>=0||Object.prototype.propertyIsEnumerable.call(t,r)&&(n[r]=t[r])}return n}var s=a.createContext({}),p=function(t){var e=a.useContext(s),r=e;return t&&(r="function"==typeof t?t(e):o(o({},e),t)),r},m=function(t){var e=p(t.components);return a.createElement(s.Provider,{value:e},t.children)},u={inlineCode:"code",wrapper:function(t){var e=t.children;return a.createElement(a.Fragment,{},e)}},d=a.forwardRef((function(t,e){var r=t.components,n=t.mdxType,i=t.originalType,s=t.parentName,m=l(t,["components","mdxType","originalType","parentName"]),d=p(r),c=n,h=d["".concat(s,".").concat(c)]||d[c]||u[c]||i;return r?a.createElement(h,o(o({ref:e},m),{},{components:r})):a.createElement(h,o({ref:e},m))}));function c(t,e){var r=arguments,n=e&&e.mdxType;if("string"==typeof t||n){var i=r.length,o=new Array(i);o[0]=d;var l={};for(var s in e)hasOwnProperty.call(e,s)&&(l[s]=e[s]);l.originalType=t,l.mdxType="string"==typeof t?t:n,o[1]=l;for(var p=2;p<i;p++)o[p]=r[p];return a.createElement.apply(null,o)}return a.createElement.apply(null,r)}d.displayName="MDXCreateElement"},69825:function(t,e,r){r.r(e),r.d(e,{assets:function(){return m},contentTitle:function(){return s},default:function(){return c},frontMatter:function(){return l},metadata:function(){return p},toc:function(){return u}});var a=r(87462),n=r(63366),i=(r(67294),r(3905)),o=["components"],l={id:"texture-type-lightmap",title:"Lightmap",slug:"/class-texture-importer/texture-type-lightmap"},s="Lightmap",p={unversionedId:"graphics/textures/importing-textures/class-texture-importer/texture-type-lightmap",id:"graphics/textures/importing-textures/class-texture-importer/texture-type-lightmap",title:"Lightmap",description:"The  Lightmap  texture type formats the texture asset so it\u2019s suitable to use as a Lightmap. This option enables encoding into a specific format (RGBM or dLDR depending on the platform) and a post-processing step on texture data (a push-pull dilation pass). Unity locks  Texture Shape  to  2D  for this texture type. For more information, see Texture Shape.",source:"@site/docs/graphics/textures/importing-textures/class-texture-importer/texture-type-lightmap.md",sourceDirName:"graphics/textures/importing-textures/class-texture-importer",slug:"/class-texture-importer/texture-type-lightmap",permalink:"/doc-unity-manual/docs/class-texture-importer/texture-type-lightmap",editUrl:"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/graphics/textures/importing-textures/class-texture-importer/texture-type-lightmap.md",tags:[],version:"current",frontMatter:{id:"texture-type-lightmap",title:"Lightmap",slug:"/class-texture-importer/texture-type-lightmap"},sidebar:"tutorialSidebar",previous:{title:"Editor GUI and Legacy GUI",permalink:"/doc-unity-manual/docs/class-texture-importer/texture-type-editor-gui-and-legacy-gui"},next:{title:"Normal map",permalink:"/doc-unity-manual/docs/class-texture-importer/texture-type-normal-map"}},m={},u=[{value:"\u5c5e\u6027",id:"\u5c5e\u6027",level:2}],d={toc:u};function c(t){var e=t.components,r=(0,n.Z)(t,o);return(0,i.kt)("wrapper",(0,a.Z)({},d,r,{components:e,mdxType:"MDXLayout"}),(0,i.kt)("h1",{id:"lightmap"},"Lightmap"),(0,i.kt)("p",null,"The  ",(0,i.kt)("strong",{parentName:"p"},"Lightmap"),"  texture type formats the texture asset so it\u2019s suitable to use as a ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/lightmappers/class-lightmap-parameters"},"Lightmap"),". This option enables encoding into a specific format (RGBM or dLDR depending on the platform) and a post-processing step on texture data (a push-pull dilation pass). Unity locks  ",(0,i.kt)("strong",{parentName:"p"},"Texture Shape"),"  to  ",(0,i.kt)("strong",{parentName:"p"},"2D"),"  for this texture type. For more information, see ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/class-texture-importer#texture-shape"},"Texture Shape"),"."),(0,i.kt)("h2",{id:"\u5c5e\u6027"},"\u5c5e\u6027"),(0,i.kt)("p",null,(0,i.kt)("img",{parentName:"p",src:"https://docs.unity3d.com/cn/2022.1/uploads/Main/TextureTypes-Lightmap-6.png",alt:"Properties for the Lightmap Texture Type"})),(0,i.kt)("p",null,"Properties for the Lightmap Texture Type"),(0,i.kt)("table",null,(0,i.kt)("thead",{parentName:"table"},(0,i.kt)("tr",{parentName:"thead"},(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"Property")),(0,i.kt)("th",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"th"},"Description")))),(0,i.kt)("tbody",{parentName:"table"},(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Non Power of 2")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies how Unity scales the dimension size if the texture source file has a non-power of two (NPOT) dimension size. For more information on NPOT dimension sizes, see ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/importing-textures"},"Importing Texture"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"None")),(0,i.kt)("td",{parentName:"tr",align:null},"Texture dimension size stays the same.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"To nearest")),(0,i.kt)("td",{parentName:"tr",align:null},"Scales the Texture to the nearest power-of-two dimension size at import time. For example, a 257x511 px Texture is scaled to 256x512 px. Note that PVRTC formats require Textures to be square (that is width equal to height), so the final dimension size is upscaled to 512x512 px.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"To larger")),(0,i.kt)("td",{parentName:"tr",align:null},"Scales the Texture to the power-of-two dimension size of the largest dimension size value at import time. For example, a 257x511 px Texture is scaled to 512x512 px.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"To smaller")),(0,i.kt)("td",{parentName:"tr",align:null},"Scales the Texture to the power-of-two dimension size of the smallest dimension size value at import time. For example, a 257x511 px Texture is scaled to 256x256 px.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Read/Write")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether to access the texture data from scripts using ",(0,i.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Texture2D.SetPixels.html"},"Texture2D.SetPixels"),", ",(0,i.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Texture2D.GetPixels.html"},"Texture2D.GetPixels")," and other ",(0,i.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Texture2D.html"},"Texture2D")," methods. ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/class-texture-importer"},"More info"),". Internally, Unity uses a copy of the Texture data for script access, which doubles the amount of memory required for the Texture. This property is therefore disabled by default, and you should enable it only if you require script access. For more information, see ",(0,i.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/ScriptReference/Texture2D.html"},"Texture2D"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether to generate ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/texture-mipmaps/texture-mipmaps-introduction"},"mipmaps")," for this texture.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Mip Streaming")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether to use ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/texture-mipmaps/texture-streaming"},"Mipmap Streaming")," for this texture.",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Mip Map Priority")),(0,i.kt)("td",{parentName:"tr",align:null},"The priority of the textures in the ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/texture-mipmaps/texture-streaming"},"Mipmap Streaming system"),". Unity uses this setting in two ways:",(0,i.kt)("br",null),(0,i.kt)("br",null),"*"," To determine which textures to prioritize when assigning resources.",(0,i.kt)("br",null),"*"," As a mip bias value when choosing a mip level that fits in the memory budget. For example, with a priority of 2, the mipmap streaming system tries to use a mipmap two mip levels higher than Textures with a priority of 0.",(0,i.kt)("br",null),(0,i.kt)("br",null),"Positive numbers give higher priority. Valid values range from \u2013128 to 127.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Mipmap Filtering")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies the method Unity uses to filter mipmaps and optimize image quality.",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Box")),(0,i.kt)("td",{parentName:"tr",align:null},"Makes mip levels smoother as they decrease in dimension size.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Kaiser")),(0,i.kt)("td",{parentName:"tr",align:null},"Runs a sharpening algorithm on mipmaps as they decrease in dimension size. Use this option if your textures are too blurry when far away.",(0,i.kt)("br",null),"The algorithm is of the Kaiser Window type. For more information, see ",(0,i.kt)("a",{parentName:"td",href:"https://en.wikipedia.org/wiki/Kaiser_window"},"Wikipedia"),".")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Preserve Coverage")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether the alpha channel in generated mipmaps preserves coverage during the alpha text. For more information, see ",(0,i.kt)("a",{parentName:"td",href:"https://docs.unity3d.com/cn/2022.1/Manual/TextureImporterSettings-mipMapsPreserveCoverage.html"},"TextureImporterSettings.mipMapsPreserveCoverage"),".",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Alpha Cutoff")),(0,i.kt)("td",{parentName:"tr",align:null},"The reference value that controls the mipmap coverage during the alpha test.",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Preserve Coverage")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Replicate Border")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether to stop colors bleeding out to the edge of the lower MIP levels. This is useful for light cookies.",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Fadeout to Gray")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether mipmaps should fade to gray as the mip levels progress. This is useful for detail maps. The left-most scroll is the first mip level to begin fading out. The right-most scroll defines the mip level where the texture is completely grayed out.",(0,i.kt)("br",null),(0,i.kt)("br",null),"This property is only visible when you enable  ",(0,i.kt)("strong",{parentName:"td"},"Generate Mipmaps")," .")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Ignore PNG Gamma")),(0,i.kt)("td",{parentName:"tr",align:null},"Indicates whether to ignore the gamma attribute in PNG files. This option is only visible if the texture source file is a PNG.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Swizzle")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies how to order the texture source file color channel data.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Wrap Mode")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies how the texture behaves when it tiles.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Repeat")),(0,i.kt)("td",{parentName:"tr",align:null},"Repeats the texture in tiles.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Clamp")),(0,i.kt)("td",{parentName:"tr",align:null},"Stretches the texture\u2019s edges.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Mirror")),(0,i.kt)("td",{parentName:"tr",align:null},"Mirrors the texture at every integer boundary to create a repeating pattern.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Mirror Once")),(0,i.kt)("td",{parentName:"tr",align:null},"Mirrors the texture once, then clamps it to edge pixels.",(0,i.kt)("br",null),(0,i.kt)("br",null)," ",(0,i.kt)("strong",{parentName:"td"},"Note")," : Some mobile devices don\u2019t support  ",(0,i.kt)("strong",{parentName:"td"},"Mirror Once")," . In this case, Unity uses  ",(0,i.kt)("strong",{parentName:"td"},"Mirror"),"  instead.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Per-axis")),(0,i.kt)("td",{parentName:"tr",align:null},"Provides options you can use to individually control how Unity wraps textures on the U and V axis.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Filter Mode")),(0,i.kt)("td",{parentName:"tr",align:null},"Specifies how Unity filters the texture when the texture stretches during 3D transformations.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Point (no filter)")),(0,i.kt)("td",{parentName:"tr",align:null},"The texture appears blocky up close.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Bilinear")),(0,i.kt)("td",{parentName:"tr",align:null},"The texture appears blurry up close.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},"->  ",(0,i.kt)("strong",{parentName:"td"},"Trilinear")),(0,i.kt)("td",{parentName:"tr",align:null},"Like  ",(0,i.kt)("strong",{parentName:"td"},"Bilinear")," , but the texture also blurs between the different MIP levels.")),(0,i.kt)("tr",{parentName:"tbody"},(0,i.kt)("td",{parentName:"tr",align:null},(0,i.kt)("strong",{parentName:"td"},"Aniso Level")),(0,i.kt)("td",{parentName:"tr",align:null},"Controls the texture quality when you view the texture at a steep angle. Anisotropic filtering is good for floor and ground Textures but is resource intensive. For more information, see ",(0,i.kt)("a",{parentName:"td",href:"/doc-unity-manual/docs/importing-textures"},"Importing textures"),".")))),(0,i.kt)("p",null,"In addition, you can use the ",(0,i.kt)("a",{parentName:"p",href:"/doc-unity-manual/docs/class-texture-importer#%E7%89%B9%E5%AE%9A%E4%BA%8E%E5%B9%B3%E5%8F%B0%E7%9A%84%E8%A6%86%E7%9B%96-platform-specific-overrides"},"Platform-specific overrides")," panel to set default options and overrides for specific platforms."))}c.isMDXComponent=!0}}]);